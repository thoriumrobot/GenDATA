{
  "method_name": "__cfwr_temp524",
  "java_file": null,
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 2,
      "label": "While(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false))",
      "line": 47,
      "node_type": "control"
    },
    {
      "id": 3,
      "label": "Try",
      "line": 36,
      "node_type": "control"
    },
    {
      "id": 4,
      "label": "Return(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null))",
      "line": 37,
      "node_type": "control"
    },
    {
      "id": 5,
      "label": "Catch(__cfwr_e7)",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 6,
      "label": "Break",
      "line": 53,
      "node_type": "control"
    },
    {
      "id": 7,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i6, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=10), operator=<))",
      "line": 43,
      "node_type": "control"
    },
    {
      "id": 8,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i30, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), operator=<))",
      "line": 44,
      "node_type": "control"
    },
    {
      "id": 9,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i12, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=10), operator=<))",
      "line": 45,
      "node_type": "control"
    },
    {
      "id": 10,
      "label": "While(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=315), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=55.81f), operator=^), operator=|))",
      "line": 46,
      "node_type": "control"
    },
    {
      "id": 11,
      "label": "If(BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator=||))",
      "line": 48,
      "node_type": "control"
    },
    {
      "id": 12,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"world57\"), name=__cfwr_elem66)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None))",
      "line": 49,
      "node_type": "control"
    },
    {
      "id": 13,
      "label": "Update(MemberReference(member=__cfwr_i12, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 45,
      "node_type": "control"
    },
    {
      "id": 14,
      "label": "Update(MemberReference(member=__cfwr_i30, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 44,
      "node_type": "control"
    },
    {
      "id": 15,
      "label": "Update(MemberReference(member=__cfwr_i6, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 43,
      "node_type": "control"
    },
    {
      "id": 16,
      "label": "Return(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='k'), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=272L), operator=<<))",
      "line": 58,
      "node_type": "control"
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 7
    },
    {
      "source": 2,
      "target": 11
    },
    {
      "source": 2,
      "target": 6
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 5
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 7,
      "target": 16
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 8,
      "target": 15
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 9,
      "target": 14
    },
    {
      "source": 10,
      "target": 2
    },
    {
      "source": 10,
      "target": 13
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 6
    },
    {
      "source": 12,
      "target": 6
    },
    {
      "source": 13,
      "target": 9
    },
    {
      "source": 14,
      "target": 8
    },
    {
      "source": 15,
      "target": 7
    }
  ],
  "control_edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 7
    },
    {
      "source": 2,
      "target": 11
    },
    {
      "source": 2,
      "target": 6
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 5
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 7,
      "target": 16
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 8,
      "target": 15
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 9,
      "target": 14
    },
    {
      "source": 10,
      "target": 2
    },
    {
      "source": 10,
      "target": 13
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 6
    },
    {
      "source": 12,
      "target": 6
    },
    {
      "source": 13,
      "target": 9
    },
    {
      "source": 14,
      "target": 8
    },
    {
      "source": 15,
      "target": 7
    }
  ],
  "dataflow_edges": []
}