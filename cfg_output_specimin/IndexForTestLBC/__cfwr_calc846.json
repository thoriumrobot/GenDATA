{
  "method_name": "__cfwr_calc846",
  "java_file": null,
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 2,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i57, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=<))",
      "line": 94,
      "node_type": "control"
    },
    {
      "id": 3,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i67, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=4), operator=<))",
      "line": 95,
      "node_type": "control"
    },
    {
      "id": 4,
      "label": "Return(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=%))",
      "line": 96,
      "node_type": "control"
    },
    {
      "id": 5,
      "label": "Update(MemberReference(member=__cfwr_i67, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 95,
      "node_type": "control"
    },
    {
      "id": 6,
      "label": "Update(MemberReference(member=__cfwr_i57, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 94,
      "node_type": "control"
    },
    {
      "id": 7,
      "label": "If(BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=87.12f), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=1.70f), operator=-), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=3.58f), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=93.36), operator=^), operator=-), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), operator=&&))",
      "line": 99,
      "node_type": "control"
    },
    {
      "id": 8,
      "label": "While(BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=69.74f), operator=>>), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=27.50), operator=>>))",
      "line": 100,
      "node_type": "control"
    },
    {
      "id": 9,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=__cfwr_item91)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Object, sub_type=None))",
      "line": 101,
      "node_type": "control"
    },
    {
      "id": 10,
      "label": "Break",
      "line": 102,
      "node_type": "control"
    },
    {
      "id": 11,
      "label": "Return(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true))",
      "line": 105,
      "node_type": "control"
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 7
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 6
    },
    {
      "source": 5,
      "target": 3
    },
    {
      "source": 6,
      "target": 2
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 7,
      "target": 11
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 8,
      "target": 11
    },
    {
      "source": 9,
      "target": 10
    }
  ],
  "control_edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 7
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 6
    },
    {
      "source": 5,
      "target": 3
    },
    {
      "source": 6,
      "target": 2
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 7,
      "target": 11
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 8,
      "target": 11
    },
    {
      "source": 9,
      "target": 10
    }
  ],
  "dataflow_edges": []
}