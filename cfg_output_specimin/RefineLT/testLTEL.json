{
  "method_name": "testLTEL",
  "java_file": null,
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 2,
      "label": "Try",
      "line": 13,
      "node_type": "control"
    },
    {
      "id": 3,
      "label": "If(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), operator=||))",
      "line": 11,
      "node_type": "control"
    },
    {
      "id": 4,
      "label": "While(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false))",
      "line": 12,
      "node_type": "control"
    },
    {
      "id": 5,
      "label": "If(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator=&&))",
      "line": 14,
      "node_type": "control"
    },
    {
      "id": 6,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=511L), name=__cfwr_temp73)], modifiers=set(), type=BasicType(dimensions=[], name=long))",
      "line": 15,
      "node_type": "control"
    },
    {
      "id": 7,
      "label": "Catch(__cfwr_e87)",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 8,
      "label": "Break",
      "line": 20,
      "node_type": "control"
    },
    {
      "id": 9,
      "label": "Catch(__cfwr_e46)",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 10,
      "label": "LocalVariableDeclaration(annotations=[Annotation(element=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"arr\"), name=LTEqLengthOf)], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"1\")], member=parseInt, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), name=a)], modifiers=set(), type=BasicType(dimensions=[], name=int))",
      "line": 28,
      "node_type": "control"
    },
    {
      "id": 11,
      "label": "LocalVariableDeclaration(annotations=[Annotation(element=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"arr\"), name=LTEqLengthOf)], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"3\")], member=parseInt, postfix_operators=[], prefix_operators=[], qualifier=Integer, selectors=[], type_arguments=None), name=a3)], modifiers=set(), type=BasicType(dimensions=[], name=int))",
      "line": 30,
      "node_type": "control"
    },
    {
      "id": 12,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=2), name=b)], modifiers=set(), type=BasicType(dimensions=[], name=int))",
      "line": 31,
      "node_type": "control"
    },
    {
      "id": 13,
      "label": "If(BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=test, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<))",
      "line": 32,
      "node_type": "control"
    },
    {
      "id": 14,
      "label": "LocalVariableDeclaration(annotations=[Annotation(element=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"arr\"), name=LTEqLengthOf)], declarators=[VariableDeclarator(dimensions=[], initializer=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), name=c)], modifiers=set(), type=BasicType(dimensions=[], name=int))",
      "line": 34,
      "node_type": "control"
    },
    {
      "id": 15,
      "label": "LocalVariableDeclaration(annotations=[Annotation(element=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"arr\"), name=LTEqLengthOf)], declarators=[VariableDeclarator(dimensions=[], initializer=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), name=c1)], modifiers=set(), type=BasicType(dimensions=[], name=int))",
      "line": 37,
      "node_type": "control"
    },
    {
      "id": 16,
      "label": "If(BinaryOperation(operandl=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MemberReference(member=a, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=<))",
      "line": 38,
      "node_type": "control"
    },
    {
      "id": 17,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=7), name=potato)], modifiers=set(), type=BasicType(dimensions=[], name=int))",
      "line": 39,
      "node_type": "control"
    },
    {
      "id": 18,
      "label": "LocalVariableDeclaration(annotations=[Annotation(element=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"arr\"), name=LTEqLengthOf)], declarators=[VariableDeclarator(dimensions=[], initializer=MemberReference(member=b, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), name=d)], modifiers=set(), type=BasicType(dimensions=[], name=int))",
      "line": 42,
      "node_type": "control"
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 5
    },
    {
      "source": 2,
      "target": 7
    },
    {
      "source": 2,
      "target": 9
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 10
    },
    {
      "source": 4,
      "target": 2
    },
    {
      "source": 4,
      "target": 10
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 5,
      "target": 8
    },
    {
      "source": 6,
      "target": 8
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 10,
      "target": 16,
      "variable": "a"
    },
    {
      "source": 10,
      "target": 16,
      "variable": "a"
    },
    {
      "source": 10,
      "target": 16,
      "variable": "a"
    },
    {
      "source": 10,
      "target": 16,
      "variable": "a"
    },
    {
      "source": 10,
      "target": 16,
      "variable": "a"
    },
    {
      "source": 10,
      "target": 16,
      "variable": "a"
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 12,
      "target": 13
    },
    {
      "source": 12,
      "target": 13
    },
    {
      "source": 12,
      "target": 13
    },
    {
      "source": 12,
      "target": 13,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 13,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 13,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 14,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 14,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 14,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 15,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 15,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 15,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 15,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 15,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 15,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 16,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 16,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 16,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 16,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 16,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 16,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 18,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 18,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 18,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 18,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 18,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 18,
      "variable": "b"
    },
    {
      "source": 13,
      "target": 14
    },
    {
      "source": 13,
      "target": 14
    },
    {
      "source": 13,
      "target": 14
    },
    {
      "source": 13,
      "target": 15
    },
    {
      "source": 13,
      "target": 15
    },
    {
      "source": 13,
      "target": 15
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 18
    },
    {
      "source": 16,
      "target": 18
    },
    {
      "source": 16,
      "target": 18
    },
    {
      "source": 16,
      "target": 18
    },
    {
      "source": 16,
      "target": 18
    },
    {
      "source": 16,
      "target": 18
    },
    {
      "source": 17,
      "target": 1
    },
    {
      "source": 17,
      "target": 1
    },
    {
      "source": 17,
      "target": 1
    },
    {
      "source": 17,
      "target": 1
    },
    {
      "source": 17,
      "target": 1
    },
    {
      "source": 17,
      "target": 1
    },
    {
      "source": 18,
      "target": 1
    },
    {
      "source": 18,
      "target": 1
    },
    {
      "source": 18,
      "target": 1
    },
    {
      "source": 18,
      "target": 1
    },
    {
      "source": 18,
      "target": 1
    },
    {
      "source": 18,
      "target": 1
    }
  ],
  "control_edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 5
    },
    {
      "source": 2,
      "target": 7
    },
    {
      "source": 2,
      "target": 9
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 10
    },
    {
      "source": 4,
      "target": 2
    },
    {
      "source": 4,
      "target": 10
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 5,
      "target": 8
    },
    {
      "source": 6,
      "target": 8
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 12,
      "target": 13
    },
    {
      "source": 12,
      "target": 13
    },
    {
      "source": 12,
      "target": 13
    },
    {
      "source": 13,
      "target": 14
    },
    {
      "source": 13,
      "target": 14
    },
    {
      "source": 13,
      "target": 14
    },
    {
      "source": 13,
      "target": 15
    },
    {
      "source": 13,
      "target": 15
    },
    {
      "source": 13,
      "target": 15
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 18
    },
    {
      "source": 16,
      "target": 18
    },
    {
      "source": 16,
      "target": 18
    },
    {
      "source": 16,
      "target": 18
    },
    {
      "source": 16,
      "target": 18
    },
    {
      "source": 16,
      "target": 18
    },
    {
      "source": 17,
      "target": 1
    },
    {
      "source": 17,
      "target": 1
    },
    {
      "source": 17,
      "target": 1
    },
    {
      "source": 17,
      "target": 1
    },
    {
      "source": 17,
      "target": 1
    },
    {
      "source": 17,
      "target": 1
    },
    {
      "source": 18,
      "target": 1
    },
    {
      "source": 18,
      "target": 1
    },
    {
      "source": 18,
      "target": 1
    },
    {
      "source": 18,
      "target": 1
    },
    {
      "source": 18,
      "target": 1
    },
    {
      "source": 18,
      "target": 1
    }
  ],
  "dataflow_edges": [
    {
      "source": 10,
      "target": 16,
      "variable": "a"
    },
    {
      "source": 10,
      "target": 16,
      "variable": "a"
    },
    {
      "source": 10,
      "target": 16,
      "variable": "a"
    },
    {
      "source": 10,
      "target": 16,
      "variable": "a"
    },
    {
      "source": 10,
      "target": 16,
      "variable": "a"
    },
    {
      "source": 10,
      "target": 16,
      "variable": "a"
    },
    {
      "source": 12,
      "target": 13,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 13,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 13,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 14,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 14,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 14,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 15,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 15,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 15,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 15,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 15,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 15,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 16,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 16,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 16,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 16,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 16,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 16,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 18,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 18,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 18,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 18,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 18,
      "variable": "b"
    },
    {
      "source": 12,
      "target": 18,
      "variable": "b"
    }
  ]
}