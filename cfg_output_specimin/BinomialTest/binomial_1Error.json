{
  "method_name": "binomial_1Error",
  "java_file": null,
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 2,
      "label": "If(BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operandr=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=97.36), operator=|), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), operator=&&))",
      "line": 10,
      "node_type": "control"
    },
    {
      "id": 3,
      "label": "If(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), operator=&&))",
      "line": 11,
      "node_type": "control"
    },
    {
      "id": 4,
      "label": "While(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false))",
      "line": 12,
      "node_type": "control"
    },
    {
      "id": 5,
      "label": "Return(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true))",
      "line": 13,
      "node_type": "control"
    },
    {
      "id": 6,
      "label": "LocalVariableDeclaration(annotations=[Annotation(element=[ElementValuePair(name=value, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"factorials\")), ElementValuePair(name=offset, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"3\"))], name=LTLengthOf)], declarators=[VariableDeclarator(dimensions=[], initializer=MemberReference(member=k, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), name=i)], modifiers=set(), type=BasicType(dimensions=[], name=int))",
      "line": 20,
      "node_type": "control"
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 6
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 6
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 6
    },
    {
      "source": 6,
      "target": 1
    },
    {
      "source": 6,
      "target": 1
    },
    {
      "source": 6,
      "target": 1
    }
  ],
  "control_edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 6
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 6
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 6
    },
    {
      "source": 6,
      "target": 1
    },
    {
      "source": 6,
      "target": 1
    },
    {
      "source": 6,
      "target": 1
    }
  ],
  "dataflow_edges": []
}