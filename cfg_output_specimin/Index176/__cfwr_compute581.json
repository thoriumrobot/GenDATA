{
  "method_name": "__cfwr_compute581",
  "java_file": null,
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 2,
      "label": "Try",
      "line": 36,
      "node_type": "control"
    },
    {
      "id": 3,
      "label": "If(BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=16.79), operator=/), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator=||))",
      "line": 37,
      "node_type": "control"
    },
    {
      "id": 4,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=93.05f), operator=*), operator=^), name=__cfwr_elem53)], modifiers=set(), type=BasicType(dimensions=[], name=double))",
      "line": 38,
      "node_type": "control"
    },
    {
      "id": 5,
      "label": "Catch(__cfwr_e25)",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 6,
      "label": "Return(BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='t'), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='p'), operator=<<), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value='X'), operator=-))",
      "line": 43,
      "node_type": "control"
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 5
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 6
    },
    {
      "source": 4,
      "target": 6
    },
    {
      "source": 5,
      "target": 6
    }
  ],
  "control_edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 5
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 6
    },
    {
      "source": 4,
      "target": 6
    },
    {
      "source": 5,
      "target": 6
    }
  ],
  "dataflow_edges": []
}