{
  "method_name": "BitSetLowerBound",
  "java_file": null,
  "nodes": [
    {
      "id": 0,
      "label": "/*",
      "line": 1,
      "node_type": "stmt"
    },
    {
      "id": 1,
      "label": "* CFWR augmentation: inserted irrelevant code for data augmentation.",
      "line": 2,
      "node_type": "stmt"
    },
    {
      "id": 2,
      "label": "*/",
      "line": 3,
      "node_type": "stmt"
    },
    {
      "id": 3,
      "label": "import java.util.BitSet;",
      "line": 4,
      "node_type": "stmt"
    },
    {
      "id": 4,
      "label": "import org.checkerframework.checker.index.qual.GTENegativeOne;",
      "line": 5,
      "node_type": "stmt"
    },
    {
      "id": 5,
      "label": "",
      "line": 6,
      "node_type": "stmt"
    },
    {
      "id": 6,
      "label": "public class BitSetLowerBound {",
      "line": 7,
      "node_type": "stmt"
    },
    {
      "id": 7,
      "label": "",
      "line": 8,
      "node_type": "stmt"
    },
    {
      "id": 8,
      "label": "private void m(BitSet b) {",
      "line": 9,
      "node_type": "stmt"
    },
    {
      "id": 9,
      "label": "try {",
      "line": 10,
      "node_type": "stmt"
    },
    {
      "id": 10,
      "label": "for (int __cfwr_i89 = 0; __cfwr_i89 < 8; __cfwr_i89++) {",
      "line": 11,
      "node_type": "stmt"
    },
    {
      "id": 11,
      "label": "return null;",
      "line": 12,
      "node_type": "stmt"
    },
    {
      "id": 12,
      "label": "}",
      "line": 13,
      "node_type": "stmt"
    },
    {
      "id": 13,
      "label": "} catch (Exception __cfwr_e60) {",
      "line": 14,
      "node_type": "stmt"
    },
    {
      "id": 14,
      "label": "// ignore",
      "line": 15,
      "node_type": "stmt"
    },
    {
      "id": 15,
      "label": "}",
      "line": 16,
      "node_type": "stmt"
    },
    {
      "id": 16,
      "label": "",
      "line": 17,
      "node_type": "stmt"
    },
    {
      "id": 17,
      "label": "b.set(b.nextClearBit(0));",
      "line": 18,
      "node_type": "stmt"
    },
    {
      "id": 18,
      "label": "b.clear(b.nextSetBit(0));",
      "line": 19,
      "node_type": "stmt"
    },
    {
      "id": 19,
      "label": "@GTENegativeOne",
      "line": 20,
      "node_type": "stmt"
    },
    {
      "id": 20,
      "label": "int i = b.nextSetBit(0);",
      "line": 21,
      "node_type": "stmt"
    },
    {
      "id": 21,
      "label": "@GTENegativeOne",
      "line": 22,
      "node_type": "stmt"
    },
    {
      "id": 22,
      "label": "",
      "line": 23,
      "node_type": "stmt"
    },
    {
      "id": 23,
      "label": "if ((78L % -8) && false) {",
      "line": 24,
      "node_type": "stmt"
    },
    {
      "id": 24,
      "label": "Object __cfwr_temp24 = null;",
      "line": 25,
      "node_type": "stmt"
    },
    {
      "id": 25,
      "label": "}",
      "line": 26,
      "node_type": "stmt"
    },
    {
      "id": 26,
      "label": "int j = b.previousClearBit(-1);",
      "line": 27,
      "node_type": "stmt"
    },
    {
      "id": 27,
      "label": "@GTENegativeOne",
      "line": 28,
      "node_type": "stmt"
    },
    {
      "id": 28,
      "label": "int k = b.previousSetBit(-1);",
      "line": 29,
      "node_type": "stmt"
    },
    {
      "id": 29,
      "label": "}",
      "line": 30,
      "node_type": "stmt"
    },
    {
      "id": 30,
      "label": "private Double __cfwr_process321(Object __cfwr_p0, Object __cfwr_p1, double __cfwr_p2) {",
      "line": 31,
      "node_type": "stmt"
    },
    {
      "id": 31,
      "label": "if (true || (false << 87.40)) {",
      "line": 32,
      "node_type": "stmt"
    },
    {
      "id": 32,
      "label": "try {",
      "line": 33,
      "node_type": "stmt"
    },
    {
      "id": 33,
      "label": "for (int __cfwr_i65 = 0; __cfwr_i65 < 9; __cfwr_i65++) {",
      "line": 34,
      "node_type": "stmt"
    },
    {
      "id": 34,
      "label": "return -29.39f;",
      "line": 35,
      "node_type": "stmt"
    },
    {
      "id": 35,
      "label": "}",
      "line": 36,
      "node_type": "stmt"
    },
    {
      "id": 36,
      "label": "} catch (Exception __cfwr_e8) {",
      "line": 37,
      "node_type": "stmt"
    },
    {
      "id": 37,
      "label": "// ignore",
      "line": 38,
      "node_type": "stmt"
    },
    {
      "id": 38,
      "label": "}",
      "line": 39,
      "node_type": "stmt"
    },
    {
      "id": 39,
      "label": "}",
      "line": 40,
      "node_type": "stmt"
    },
    {
      "id": 40,
      "label": "while (true) {",
      "line": 41,
      "node_type": "stmt"
    },
    {
      "id": 41,
      "label": "try {",
      "line": 42,
      "node_type": "stmt"
    },
    {
      "id": 42,
      "label": "return true;",
      "line": 43,
      "node_type": "stmt"
    },
    {
      "id": 43,
      "label": "} catch (Exception __cfwr_e34) {",
      "line": 44,
      "node_type": "stmt"
    },
    {
      "id": 44,
      "label": "// ignore",
      "line": 45,
      "node_type": "stmt"
    },
    {
      "id": 45,
      "label": "}",
      "line": 46,
      "node_type": "stmt"
    },
    {
      "id": 46,
      "label": "break; // Prevent infinite loops",
      "line": 47,
      "node_type": "stmt"
    },
    {
      "id": 47,
      "label": "}",
      "line": 48,
      "node_type": "stmt"
    },
    {
      "id": 48,
      "label": "return null;",
      "line": 49,
      "node_type": "stmt"
    },
    {
      "id": 49,
      "label": "}",
      "line": 50,
      "node_type": "stmt"
    },
    {
      "id": 50,
      "label": "}",
      "line": 51,
      "node_type": "stmt"
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 1
    },
    {
      "source": 1,
      "target": 2
    },
    {
      "source": 1,
      "target": 10,
      "variable": "for"
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 4,
      "variable": "import"
    },
    {
      "source": 3,
      "target": 8,
      "variable": "BitSet"
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 19,
      "variable": "GTENegativeOne"
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 8,
      "target": 17,
      "variable": "b"
    },
    {
      "source": 8,
      "target": 30,
      "variable": "private"
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 9,
      "target": 32,
      "variable": "try"
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 10,
      "target": 20,
      "variable": "int"
    },
    {
      "source": 10,
      "target": 33,
      "variable": "for"
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 34,
      "variable": "return"
    },
    {
      "source": 12,
      "target": 13
    },
    {
      "source": 13,
      "target": 14
    },
    {
      "source": 13,
      "target": 36,
      "variable": "catch"
    },
    {
      "source": 13,
      "target": 36,
      "variable": "Exception"
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 14,
      "target": 37,
      "variable": "ignore"
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 17,
      "target": 18
    },
    {
      "source": 17,
      "target": 18,
      "variable": "b"
    },
    {
      "source": 18,
      "target": 19
    },
    {
      "source": 18,
      "target": 20,
      "variable": "b"
    },
    {
      "source": 18,
      "target": 20,
      "variable": "nextSetBit"
    },
    {
      "source": 19,
      "target": 20
    },
    {
      "source": 19,
      "target": 21,
      "variable": "GTENegativeOne"
    },
    {
      "source": 20,
      "target": 21
    },
    {
      "source": 20,
      "target": 26,
      "variable": "int"
    },
    {
      "source": 20,
      "target": 26,
      "variable": "b"
    },
    {
      "source": 21,
      "target": 22
    },
    {
      "source": 21,
      "target": 27,
      "variable": "GTENegativeOne"
    },
    {
      "source": 22,
      "target": 23
    },
    {
      "source": 23,
      "target": 24
    },
    {
      "source": 23,
      "target": 31,
      "variable": "if"
    },
    {
      "source": 24,
      "target": 25
    },
    {
      "source": 24,
      "target": 30,
      "variable": "Object"
    },
    {
      "source": 25,
      "target": 26
    },
    {
      "source": 26,
      "target": 27
    },
    {
      "source": 26,
      "target": 28,
      "variable": "int"
    },
    {
      "source": 26,
      "target": 28,
      "variable": "b"
    },
    {
      "source": 27,
      "target": 28
    },
    {
      "source": 28,
      "target": 29
    },
    {
      "source": 28,
      "target": 33,
      "variable": "int"
    },
    {
      "source": 29,
      "target": 30
    },
    {
      "source": 30,
      "target": 31
    },
    {
      "source": 31,
      "target": 32
    },
    {
      "source": 32,
      "target": 33
    },
    {
      "source": 32,
      "target": 41,
      "variable": "try"
    },
    {
      "source": 33,
      "target": 34
    },
    {
      "source": 34,
      "target": 35
    },
    {
      "source": 34,
      "target": 42,
      "variable": "return"
    },
    {
      "source": 35,
      "target": 36
    },
    {
      "source": 36,
      "target": 37
    },
    {
      "source": 36,
      "target": 43,
      "variable": "catch"
    },
    {
      "source": 36,
      "target": 43,
      "variable": "Exception"
    },
    {
      "source": 37,
      "target": 38
    },
    {
      "source": 37,
      "target": 44,
      "variable": "ignore"
    },
    {
      "source": 38,
      "target": 39
    },
    {
      "source": 39,
      "target": 40
    },
    {
      "source": 40,
      "target": 41
    },
    {
      "source": 41,
      "target": 42
    },
    {
      "source": 42,
      "target": 43
    },
    {
      "source": 42,
      "target": 48,
      "variable": "return"
    },
    {
      "source": 43,
      "target": 44
    },
    {
      "source": 44,
      "target": 45
    },
    {
      "source": 45,
      "target": 46
    },
    {
      "source": 46,
      "target": 47
    },
    {
      "source": 47,
      "target": 48
    },
    {
      "source": 48,
      "target": 49
    },
    {
      "source": 49,
      "target": 50
    }
  ],
  "control_edges": [
    {
      "source": 0,
      "target": 1
    },
    {
      "source": 1,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 12,
      "target": 13
    },
    {
      "source": 13,
      "target": 14
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 17,
      "target": 18
    },
    {
      "source": 18,
      "target": 19
    },
    {
      "source": 19,
      "target": 20
    },
    {
      "source": 20,
      "target": 21
    },
    {
      "source": 21,
      "target": 22
    },
    {
      "source": 22,
      "target": 23
    },
    {
      "source": 23,
      "target": 24
    },
    {
      "source": 24,
      "target": 25
    },
    {
      "source": 25,
      "target": 26
    },
    {
      "source": 26,
      "target": 27
    },
    {
      "source": 27,
      "target": 28
    },
    {
      "source": 28,
      "target": 29
    },
    {
      "source": 29,
      "target": 30
    },
    {
      "source": 30,
      "target": 31
    },
    {
      "source": 31,
      "target": 32
    },
    {
      "source": 32,
      "target": 33
    },
    {
      "source": 33,
      "target": 34
    },
    {
      "source": 34,
      "target": 35
    },
    {
      "source": 35,
      "target": 36
    },
    {
      "source": 36,
      "target": 37
    },
    {
      "source": 37,
      "target": 38
    },
    {
      "source": 38,
      "target": 39
    },
    {
      "source": 39,
      "target": 40
    },
    {
      "source": 40,
      "target": 41
    },
    {
      "source": 41,
      "target": 42
    },
    {
      "source": 42,
      "target": 43
    },
    {
      "source": 43,
      "target": 44
    },
    {
      "source": 44,
      "target": 45
    },
    {
      "source": 45,
      "target": 46
    },
    {
      "source": 46,
      "target": 47
    },
    {
      "source": 47,
      "target": 48
    },
    {
      "source": 48,
      "target": 49
    },
    {
      "source": 49,
      "target": 50
    }
  ],
  "dataflow_edges": [
    {
      "source": 1,
      "target": 10,
      "variable": "for"
    },
    {
      "source": 3,
      "target": 4,
      "variable": "import"
    },
    {
      "source": 3,
      "target": 8,
      "variable": "BitSet"
    },
    {
      "source": 4,
      "target": 19,
      "variable": "GTENegativeOne"
    },
    {
      "source": 8,
      "target": 17,
      "variable": "b"
    },
    {
      "source": 8,
      "target": 30,
      "variable": "private"
    },
    {
      "source": 9,
      "target": 32,
      "variable": "try"
    },
    {
      "source": 10,
      "target": 20,
      "variable": "int"
    },
    {
      "source": 10,
      "target": 33,
      "variable": "for"
    },
    {
      "source": 11,
      "target": 34,
      "variable": "return"
    },
    {
      "source": 13,
      "target": 36,
      "variable": "catch"
    },
    {
      "source": 13,
      "target": 36,
      "variable": "Exception"
    },
    {
      "source": 14,
      "target": 37,
      "variable": "ignore"
    },
    {
      "source": 17,
      "target": 18,
      "variable": "b"
    },
    {
      "source": 18,
      "target": 20,
      "variable": "b"
    },
    {
      "source": 18,
      "target": 20,
      "variable": "nextSetBit"
    },
    {
      "source": 19,
      "target": 21,
      "variable": "GTENegativeOne"
    },
    {
      "source": 20,
      "target": 26,
      "variable": "int"
    },
    {
      "source": 20,
      "target": 26,
      "variable": "b"
    },
    {
      "source": 21,
      "target": 27,
      "variable": "GTENegativeOne"
    },
    {
      "source": 23,
      "target": 31,
      "variable": "if"
    },
    {
      "source": 24,
      "target": 30,
      "variable": "Object"
    },
    {
      "source": 26,
      "target": 28,
      "variable": "int"
    },
    {
      "source": 26,
      "target": 28,
      "variable": "b"
    },
    {
      "source": 28,
      "target": 33,
      "variable": "int"
    },
    {
      "source": 32,
      "target": 41,
      "variable": "try"
    },
    {
      "source": 34,
      "target": 42,
      "variable": "return"
    },
    {
      "source": 36,
      "target": 43,
      "variable": "catch"
    },
    {
      "source": 36,
      "target": 43,
      "variable": "Exception"
    },
    {
      "source": 37,
      "target": 44,
      "variable": "ignore"
    },
    {
      "source": 42,
      "target": 48,
      "variable": "return"
    }
  ]
}