{
  "method_name": "SkipBufferedReader",
  "java_file": null,
  "nodes": [
    {
      "id": 0,
      "label": "/*",
      "line": 1,
      "node_type": "stmt"
    },
    {
      "id": 1,
      "label": "* CFWR augmentation: inserted irrelevant code for data augmentation.",
      "line": 2,
      "node_type": "stmt"
    },
    {
      "id": 2,
      "label": "*/",
      "line": 3,
      "node_type": "stmt"
    },
    {
      "id": 3,
      "label": "import java.io.BufferedReader;",
      "line": 4,
      "node_type": "stmt"
    },
    {
      "id": 4,
      "label": "import java.io.IOException;",
      "line": 5,
      "node_type": "stmt"
    },
    {
      "id": 5,
      "label": "import java.io.InputStreamReader;",
      "line": 6,
      "node_type": "stmt"
    },
    {
      "id": 6,
      "label": "",
      "line": 7,
      "node_type": "stmt"
    },
    {
      "id": 7,
      "label": "public class SkipBufferedReader {",
      "line": 8,
      "node_type": "stmt"
    },
    {
      "id": 8,
      "label": "",
      "line": 9,
      "node_type": "stmt"
    },
    {
      "id": 9,
      "label": "public static void method() throws IOException {",
      "line": 10,
      "node_type": "stmt"
    },
    {
      "id": 10,
      "label": "BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));",
      "line": 11,
      "node_type": "stmt"
    },
    {
      "id": 11,
      "label": "bufferedReader.skip(-1);",
      "line": 12,
      "node_type": "stmt"
    },
    {
      "id": 12,
      "label": "bufferedReader.skip(1);",
      "line": 13,
      "node_type": "stmt"
    },
    {
      "id": 13,
      "label": "}",
      "line": 14,
      "node_type": "stmt"
    },
    {
      "id": 14,
      "label": "protected static float __cfwr_handle945(Float __cfwr_p0) {",
      "line": 15,
      "node_type": "stmt"
    },
    {
      "id": 15,
      "label": "for (int __cfwr_i36 = 0",
      "line": 16,
      "node_type": "stmt"
    },
    {
      "id": 16,
      "label": "if (false || (-13.19 - 757L)) {",
      "line": 17,
      "node_type": "stmt"
    },
    {
      "id": 17,
      "label": "for (int __cfwr_i90 = 0; __cfwr_i90 < 1; __cfwr_i90++) {",
      "line": 18,
      "node_type": "stmt"
    },
    {
      "id": 18,
      "label": "return 141;",
      "line": 19,
      "node_type": "stmt"
    },
    {
      "id": 19,
      "label": "}",
      "line": 20,
      "node_type": "stmt"
    },
    {
      "id": 20,
      "label": "}",
      "line": 21,
      "node_type": "stmt"
    },
    {
      "id": 21,
      "label": "; __cfwr_i36 < 2; __cfwr_i36++) {",
      "line": 22,
      "node_type": "stmt"
    },
    {
      "id": 22,
      "label": "return (null << -2.62);",
      "line": 23,
      "node_type": "stmt"
    },
    {
      "id": 23,
      "label": "}",
      "line": 24,
      "node_type": "stmt"
    },
    {
      "id": 24,
      "label": "",
      "line": 25,
      "node_type": "stmt"
    },
    {
      "id": 25,
      "label": "while ((null >> 269)) {",
      "line": 26,
      "node_type": "stmt"
    },
    {
      "id": 26,
      "label": "for (int __cfwr_i47 = 0; __cfwr_i47 < 2; __cfwr_i47++) {",
      "line": 27,
      "node_type": "stmt"
    },
    {
      "id": 27,
      "label": "if (((true >> -33L) / null) || false) {",
      "line": 28,
      "node_type": "stmt"
    },
    {
      "id": 28,
      "label": "for (int __cfwr_i32 = 0; __cfwr_i32 < 8; __cfwr_i32++) {",
      "line": 29,
      "node_type": "stmt"
    },
    {
      "id": 29,
      "label": "return null;",
      "line": 30,
      "node_type": "stmt"
    },
    {
      "id": 30,
      "label": "}",
      "line": 31,
      "node_type": "stmt"
    },
    {
      "id": 31,
      "label": "}",
      "line": 32,
      "node_type": "stmt"
    },
    {
      "id": 32,
      "label": "}",
      "line": 33,
      "node_type": "stmt"
    },
    {
      "id": 33,
      "label": "break; // Prevent infinite loops",
      "line": 34,
      "node_type": "stmt"
    },
    {
      "id": 34,
      "label": "}",
      "line": 35,
      "node_type": "stmt"
    },
    {
      "id": 35,
      "label": "while ((1.65 * 'B')) {",
      "line": 36,
      "node_type": "stmt"
    },
    {
      "id": 36,
      "label": "byte __cfwr_data20 = ((-436L / true) >> false);",
      "line": 37,
      "node_type": "stmt"
    },
    {
      "id": 37,
      "label": "break; // Prevent infinite loops",
      "line": 38,
      "node_type": "stmt"
    },
    {
      "id": 38,
      "label": "}",
      "line": 39,
      "node_type": "stmt"
    },
    {
      "id": 39,
      "label": "return (('F' & 24.74) % true);",
      "line": 40,
      "node_type": "stmt"
    },
    {
      "id": 40,
      "label": "}",
      "line": 41,
      "node_type": "stmt"
    },
    {
      "id": 41,
      "label": "}",
      "line": 42,
      "node_type": "stmt"
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 1
    },
    {
      "source": 1,
      "target": 2
    },
    {
      "source": 1,
      "target": 15,
      "variable": "for"
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 4,
      "variable": "import"
    },
    {
      "source": 3,
      "target": 4,
      "variable": "java"
    },
    {
      "source": 3,
      "target": 4,
      "variable": "io"
    },
    {
      "source": 3,
      "target": 10,
      "variable": "BufferedReader"
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 5,
      "variable": "import"
    },
    {
      "source": 4,
      "target": 5,
      "variable": "java"
    },
    {
      "source": 4,
      "target": 5,
      "variable": "io"
    },
    {
      "source": 4,
      "target": 9,
      "variable": "IOException"
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 5,
      "target": 10,
      "variable": "InputStreamReader"
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 7,
      "target": 9,
      "variable": "public"
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 9,
      "target": 14,
      "variable": "static"
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 10,
      "target": 11,
      "variable": "bufferedReader"
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 12,
      "variable": "bufferedReader"
    },
    {
      "source": 11,
      "target": 12,
      "variable": "skip"
    },
    {
      "source": 12,
      "target": 13
    },
    {
      "source": 13,
      "target": 14
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 15,
      "target": 17,
      "variable": "for"
    },
    {
      "source": 15,
      "target": 17,
      "variable": "int"
    },
    {
      "source": 15,
      "target": 21,
      "variable": "__cfwr_i36"
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 27,
      "variable": "if"
    },
    {
      "source": 16,
      "target": 27,
      "variable": "L"
    },
    {
      "source": 17,
      "target": 18
    },
    {
      "source": 17,
      "target": 26,
      "variable": "for"
    },
    {
      "source": 17,
      "target": 26,
      "variable": "int"
    },
    {
      "source": 18,
      "target": 19
    },
    {
      "source": 18,
      "target": 22,
      "variable": "return"
    },
    {
      "source": 19,
      "target": 20
    },
    {
      "source": 20,
      "target": 21
    },
    {
      "source": 21,
      "target": 22
    },
    {
      "source": 22,
      "target": 23
    },
    {
      "source": 22,
      "target": 29,
      "variable": "return"
    },
    {
      "source": 23,
      "target": 24
    },
    {
      "source": 24,
      "target": 25
    },
    {
      "source": 25,
      "target": 26
    },
    {
      "source": 25,
      "target": 35,
      "variable": "while"
    },
    {
      "source": 26,
      "target": 27
    },
    {
      "source": 26,
      "target": 28,
      "variable": "for"
    },
    {
      "source": 26,
      "target": 28,
      "variable": "int"
    },
    {
      "source": 27,
      "target": 28
    },
    {
      "source": 27,
      "target": 36,
      "variable": "L"
    },
    {
      "source": 28,
      "target": 29
    },
    {
      "source": 29,
      "target": 30
    },
    {
      "source": 29,
      "target": 39,
      "variable": "return"
    },
    {
      "source": 30,
      "target": 31
    },
    {
      "source": 31,
      "target": 32
    },
    {
      "source": 32,
      "target": 33
    },
    {
      "source": 33,
      "target": 34
    },
    {
      "source": 33,
      "target": 37,
      "variable": "break"
    },
    {
      "source": 33,
      "target": 37,
      "variable": "Prevent"
    },
    {
      "source": 33,
      "target": 37,
      "variable": "infinite"
    },
    {
      "source": 33,
      "target": 37,
      "variable": "loops"
    },
    {
      "source": 34,
      "target": 35
    },
    {
      "source": 35,
      "target": 36
    },
    {
      "source": 36,
      "target": 37
    },
    {
      "source": 37,
      "target": 38
    },
    {
      "source": 38,
      "target": 39
    },
    {
      "source": 39,
      "target": 40
    },
    {
      "source": 40,
      "target": 41
    }
  ],
  "control_edges": [
    {
      "source": 0,
      "target": 1
    },
    {
      "source": 1,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 12,
      "target": 13
    },
    {
      "source": 13,
      "target": 14
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 15,
      "target": 16
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 17,
      "target": 18
    },
    {
      "source": 18,
      "target": 19
    },
    {
      "source": 19,
      "target": 20
    },
    {
      "source": 20,
      "target": 21
    },
    {
      "source": 21,
      "target": 22
    },
    {
      "source": 22,
      "target": 23
    },
    {
      "source": 23,
      "target": 24
    },
    {
      "source": 24,
      "target": 25
    },
    {
      "source": 25,
      "target": 26
    },
    {
      "source": 26,
      "target": 27
    },
    {
      "source": 27,
      "target": 28
    },
    {
      "source": 28,
      "target": 29
    },
    {
      "source": 29,
      "target": 30
    },
    {
      "source": 30,
      "target": 31
    },
    {
      "source": 31,
      "target": 32
    },
    {
      "source": 32,
      "target": 33
    },
    {
      "source": 33,
      "target": 34
    },
    {
      "source": 34,
      "target": 35
    },
    {
      "source": 35,
      "target": 36
    },
    {
      "source": 36,
      "target": 37
    },
    {
      "source": 37,
      "target": 38
    },
    {
      "source": 38,
      "target": 39
    },
    {
      "source": 39,
      "target": 40
    },
    {
      "source": 40,
      "target": 41
    }
  ],
  "dataflow_edges": [
    {
      "source": 1,
      "target": 15,
      "variable": "for"
    },
    {
      "source": 3,
      "target": 4,
      "variable": "import"
    },
    {
      "source": 3,
      "target": 4,
      "variable": "java"
    },
    {
      "source": 3,
      "target": 4,
      "variable": "io"
    },
    {
      "source": 3,
      "target": 10,
      "variable": "BufferedReader"
    },
    {
      "source": 4,
      "target": 5,
      "variable": "import"
    },
    {
      "source": 4,
      "target": 5,
      "variable": "java"
    },
    {
      "source": 4,
      "target": 5,
      "variable": "io"
    },
    {
      "source": 4,
      "target": 9,
      "variable": "IOException"
    },
    {
      "source": 5,
      "target": 10,
      "variable": "InputStreamReader"
    },
    {
      "source": 7,
      "target": 9,
      "variable": "public"
    },
    {
      "source": 9,
      "target": 14,
      "variable": "static"
    },
    {
      "source": 10,
      "target": 11,
      "variable": "bufferedReader"
    },
    {
      "source": 11,
      "target": 12,
      "variable": "bufferedReader"
    },
    {
      "source": 11,
      "target": 12,
      "variable": "skip"
    },
    {
      "source": 15,
      "target": 17,
      "variable": "for"
    },
    {
      "source": 15,
      "target": 17,
      "variable": "int"
    },
    {
      "source": 15,
      "target": 21,
      "variable": "__cfwr_i36"
    },
    {
      "source": 16,
      "target": 27,
      "variable": "if"
    },
    {
      "source": 16,
      "target": 27,
      "variable": "L"
    },
    {
      "source": 17,
      "target": 26,
      "variable": "for"
    },
    {
      "source": 17,
      "target": 26,
      "variable": "int"
    },
    {
      "source": 18,
      "target": 22,
      "variable": "return"
    },
    {
      "source": 22,
      "target": 29,
      "variable": "return"
    },
    {
      "source": 25,
      "target": 35,
      "variable": "while"
    },
    {
      "source": 26,
      "target": 28,
      "variable": "for"
    },
    {
      "source": 26,
      "target": 28,
      "variable": "int"
    },
    {
      "source": 27,
      "target": 36,
      "variable": "L"
    },
    {
      "source": 29,
      "target": 39,
      "variable": "return"
    },
    {
      "source": 33,
      "target": 37,
      "variable": "break"
    },
    {
      "source": 33,
      "target": 37,
      "variable": "Prevent"
    },
    {
      "source": 33,
      "target": 37,
      "variable": "infinite"
    },
    {
      "source": 33,
      "target": 37,
      "variable": "loops"
    }
  ]
}