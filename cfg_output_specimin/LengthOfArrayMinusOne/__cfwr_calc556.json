{
  "method_name": "__cfwr_calc556",
  "java_file": null,
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 2,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=52L), name=__cfwr_data89)], modifiers=set(), type=BasicType(dimensions=[], name=long))",
      "line": 26,
      "node_type": "control"
    },
    {
      "id": 3,
      "label": "Try",
      "line": 40,
      "node_type": "control"
    },
    {
      "id": 4,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i74, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=9), operator=<))",
      "line": 29,
      "node_type": "control"
    },
    {
      "id": 5,
      "label": "Return(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null))",
      "line": 48,
      "node_type": "control"
    },
    {
      "id": 6,
      "label": "Update(MemberReference(member=__cfwr_i74, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 29,
      "node_type": "control"
    },
    {
      "id": 7,
      "label": "Catch(__cfwr_e72)",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 8,
      "label": "Catch(__cfwr_e23)",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 9,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), name=__cfwr_node9)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=Character, sub_type=None))",
      "line": 38,
      "node_type": "control"
    },
    {
      "id": 10,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i12, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=8), operator=<))",
      "line": 39,
      "node_type": "control"
    },
    {
      "id": 11,
      "label": "For(BinaryOperation(operandl=MemberReference(member=__cfwr_i18, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=3), operator=<))",
      "line": 41,
      "node_type": "control"
    },
    {
      "id": 12,
      "label": "Return(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=663L))",
      "line": 42,
      "node_type": "control"
    },
    {
      "id": 13,
      "label": "Update(MemberReference(member=__cfwr_i18, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 41,
      "node_type": "control"
    },
    {
      "id": 14,
      "label": "Catch(__cfwr_e51)",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 15,
      "label": "Update(MemberReference(member=__cfwr_i12, postfix_operators=['++'], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 39,
      "node_type": "control"
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 3,
      "target": 3
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 7
    },
    {
      "source": 3,
      "target": 8
    },
    {
      "source": 3,
      "target": 11
    },
    {
      "source": 3,
      "target": 11
    },
    {
      "source": 3,
      "target": 11
    },
    {
      "source": 3,
      "target": 14
    },
    {
      "source": 3,
      "target": 14
    },
    {
      "source": 3,
      "target": 14
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 9
    },
    {
      "source": 6,
      "target": 4
    },
    {
      "source": 7,
      "target": 9
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 10,
      "target": 3
    },
    {
      "source": 10,
      "target": 3
    },
    {
      "source": 10,
      "target": 3
    },
    {
      "source": 10,
      "target": 5
    },
    {
      "source": 10,
      "target": 5
    },
    {
      "source": 10,
      "target": 5
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 15
    },
    {
      "source": 11,
      "target": 15
    },
    {
      "source": 11,
      "target": 15
    },
    {
      "source": 13,
      "target": 11
    },
    {
      "source": 13,
      "target": 11
    },
    {
      "source": 13,
      "target": 11
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 15,
      "target": 10
    },
    {
      "source": 15,
      "target": 10
    },
    {
      "source": 15,
      "target": 10
    }
  ],
  "control_edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 3,
      "target": 3
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 7
    },
    {
      "source": 3,
      "target": 8
    },
    {
      "source": 3,
      "target": 11
    },
    {
      "source": 3,
      "target": 11
    },
    {
      "source": 3,
      "target": 11
    },
    {
      "source": 3,
      "target": 14
    },
    {
      "source": 3,
      "target": 14
    },
    {
      "source": 3,
      "target": 14
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 9
    },
    {
      "source": 6,
      "target": 4
    },
    {
      "source": 7,
      "target": 9
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 10,
      "target": 3
    },
    {
      "source": 10,
      "target": 3
    },
    {
      "source": 10,
      "target": 3
    },
    {
      "source": 10,
      "target": 5
    },
    {
      "source": 10,
      "target": 5
    },
    {
      "source": 10,
      "target": 5
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 12
    },
    {
      "source": 11,
      "target": 15
    },
    {
      "source": 11,
      "target": 15
    },
    {
      "source": 11,
      "target": 15
    },
    {
      "source": 13,
      "target": 11
    },
    {
      "source": 13,
      "target": 11
    },
    {
      "source": 13,
      "target": 11
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 15,
      "target": 10
    },
    {
      "source": 15,
      "target": 10
    },
    {
      "source": 15,
      "target": 10
    }
  ],
  "dataflow_edges": []
}