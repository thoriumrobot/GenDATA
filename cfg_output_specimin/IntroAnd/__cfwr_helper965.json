{
  "method_name": "__cfwr_helper965",
  "java_file": null,
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 2,
      "label": "Try",
      "line": 78,
      "node_type": "control"
    },
    {
      "id": 3,
      "label": "While(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=>>))",
      "line": 77,
      "node_type": "control"
    },
    {
      "id": 4,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=15.31f), name=__cfwr_node24)], modifiers=set(), type=BasicType(dimensions=[], name=float))",
      "line": 79,
      "node_type": "control"
    },
    {
      "id": 5,
      "label": "Catch(__cfwr_e19)",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 6,
      "label": "Break",
      "line": 83,
      "node_type": "control"
    },
    {
      "id": 7,
      "label": "Catch(__cfwr_e32)",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 8,
      "label": "Catch(__cfwr_e86)",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 9,
      "label": "Return(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"test35\"))",
      "line": 91,
      "node_type": "control"
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 4
    },
    {
      "source": 2,
      "target": 5
    },
    {
      "source": 2,
      "target": 7
    },
    {
      "source": 2,
      "target": 8
    },
    {
      "source": 3,
      "target": 2
    },
    {
      "source": 3,
      "target": 9
    },
    {
      "source": 4,
      "target": 6
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 7,
      "target": 9
    },
    {
      "source": 8,
      "target": 9
    }
  ],
  "control_edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 4
    },
    {
      "source": 2,
      "target": 5
    },
    {
      "source": 2,
      "target": 7
    },
    {
      "source": 2,
      "target": 8
    },
    {
      "source": 3,
      "target": 2
    },
    {
      "source": 3,
      "target": 9
    },
    {
      "source": 4,
      "target": 6
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 7,
      "target": 9
    },
    {
      "source": 8,
      "target": 9
    }
  ],
  "dataflow_edges": []
}