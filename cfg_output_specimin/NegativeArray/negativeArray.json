{
  "method_name": "negativeArray",
  "java_file": null,
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 2,
      "label": "While(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true))",
      "line": 17,
      "node_type": "control"
    },
    {
      "id": 3,
      "label": "Return(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null))",
      "line": 20,
      "node_type": "control"
    },
    {
      "id": 4,
      "label": "If(BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operator=||))",
      "line": 15,
      "node_type": "control"
    },
    {
      "id": 5,
      "label": "Try",
      "line": 18,
      "node_type": "control"
    },
    {
      "id": 6,
      "label": "If(BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=['-'], qualifier=None, selectors=[], value=30.39f), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=^), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=32.15f), operator=&), operator=|), operandr=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=141), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator=-), operator=||))",
      "line": 19,
      "node_type": "control"
    },
    {
      "id": 7,
      "label": "Catch(__cfwr_e92)",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 8,
      "label": "Break",
      "line": 25,
      "node_type": "control"
    },
    {
      "id": 9,
      "label": "Catch(__cfwr_e84)",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 10,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=ArrayCreator(dimensions=[MemberReference(member=len, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=BasicType(dimensions=None, name=int)), name=arr)], modifiers=set(), type=BasicType(dimensions=[None], name=int))",
      "line": 31,
      "node_type": "control"
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 4
    },
    {
      "source": 2,
      "target": 5
    },
    {
      "source": 2,
      "target": 10
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 10
    },
    {
      "source": 5,
      "target": 2
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 5,
      "target": 7
    },
    {
      "source": 5,
      "target": 9
    },
    {
      "source": 6,
      "target": 3
    },
    {
      "source": 6,
      "target": 8
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 10,
      "target": 1
    },
    {
      "source": 10,
      "target": 1
    },
    {
      "source": 10,
      "target": 1
    }
  ],
  "control_edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 4
    },
    {
      "source": 2,
      "target": 5
    },
    {
      "source": 2,
      "target": 10
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 10
    },
    {
      "source": 5,
      "target": 2
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 5,
      "target": 7
    },
    {
      "source": 5,
      "target": 9
    },
    {
      "source": 6,
      "target": 3
    },
    {
      "source": 6,
      "target": 8
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 10,
      "target": 1
    },
    {
      "source": 10,
      "target": 1
    },
    {
      "source": 10,
      "target": 1
    }
  ],
  "dataflow_edges": []
}