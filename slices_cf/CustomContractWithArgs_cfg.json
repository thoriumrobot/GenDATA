{
  "method_name": "ltlPost",
  "nodes": [
    {"id": 61, "label": "    void minLenUse(int[] b) {", "line": 61, "node_type": "stmt"},
    {"id": 62, "label": "      minLenContract(b);", "line": 62, "node_type": "stmt"},
    {"id": 63, "label": "      int @MinLen(10) [] c = b;", "line": 63, "node_type": "stmt"},
    {"id": 64, "label": "    }", "line": 64, "node_type": "stmt"},
    {"id": 65, "label": "", "line": 65, "node_type": "stmt"},
    {"id": 66, "label": "    public int b, y;", "line": 66, "node_type": "stmt"},
    {"id": 67, "label": "", "line": 67, "node_type": "stmt"},
    {"id": 68, "label": "    @EnsuresLTLIf(", "line": 68, "node_type": "stmt"},
    {"id": 69, "label": "        expression = \"b\",", "line": 69, "node_type": "stmt"},
    {"id": 70, "label": "        targetValue = {\"#1\", \"#1\"},", "line": 70, "node_type": "stmt"},
    {"id": 71, "label": "        targetOffset = {\"#2 + 1\", \"10\"},", "line": 71, "node_type": "stmt"},
    {"id": 72, "label": "        result = true)", "line": 72, "node_type": "stmt"},
    {"id": 73, "label": "    boolean ltlPost(int[] a, int c) {", "line": 73, "node_type": "stmt"},
    {"id": 74, "label": "      if (b < a.length - c - 1 && b < a.length - 10) {", "line": 74, "node_type": "stmt"},
    {"id": 75, "label": "        return true;", "line": 75, "node_type": "stmt"},
    {"id": 76, "label": "      } else {", "line": 76, "node_type": "stmt"},
    {"id": 77, "label": "        return false;", "line": 77, "node_type": "stmt"},
    {"id": 78, "label": "      }", "line": 78, "node_type": "stmt"},
    {"id": 79, "label": "    }", "line": 79, "node_type": "stmt"},
    {"id": 80, "label": "", "line": 80, "node_type": "stmt"},
    {"id": 81, "label": "    @EnsuresLTLIf(expression = \"b\", targetValue = \"#1\", targetOffset = \"#3\", result = true)", "line": 81, "node_type": "stmt"},
    {"id": 82, "label": "    // :: error: (flowexpr.parse.error)", "line": 82, "node_type": "stmt"},
    {"id": 83, "label": "    boolean ltlPostInvalid(int[] a, int c) {", "line": 83, "node_type": "stmt"},
    {"id": 84, "label": "      return false;", "line": 84, "node_type": "stmt"},
    {"id": 85, "label": "    }", "line": 85, "node_type": "stmt"},
    {"id": 86, "label": "", "line": 86, "node_type": "stmt"},
    {"id": 87, "label": "    @RequiresLTL(", "line": 87, "node_type": "stmt"},
    {"id": 88, "label": "        value = \"b\",", "line": 88, "node_type": "stmt"},
    {"id": 89, "label": "        targetValue = {\"#1\", \"#1\"},", "line": 89, "node_type": "stmt"},
    {"id": 90, "label": "        targetOffset = {\"#2 + 1\", \"-10\"})", "line": 90, "node_type": "stmt"},
    {"id": 91, "label": "    void ltlPre(int[] a, int c) {", "line": 91, "node_type": "stmt"},
    {"id": 92, "label": "    @Positive", "line": 92, "node_type": "stmt"},
    {"id": 93, "label": "      @LTLengthOf(value = \"a\", offset = \"c+1\") int i = b;", "line": 93, "node_type": "stmt"},
    {"id": 94, "label": "    }", "line": 94, "node_type": "stmt"},
    {"id": 95, "label": "", "line": 95, "node_type": "stmt"},
    {"id": 96, "label": "    void ltlUse(int[] a, int c) {", "line": 96, "node_type": "stmt"},
    {"id": 97, "label": "      if (ltlPost(a, c)) {", "line": 97, "node_type": "stmt"},
    {"id": 98, "label": "    @Positive", "line": 98, "node_type": "stmt"},
    {"id": 99, "label": "        @LTLengthOf(value = \"a\", offset = \"c+1\") int i = b;", "line": 99, "node_type": "stmt"},
    {"id": 100, "label": "", "line": 100, "node_type": "stmt"},
    {"id": 101, "label": "        ltlPre(a, c);", "line": 101, "node_type": "stmt"},
    {"id": 102, "label": "      }", "line": 102, "node_type": "stmt"},
    {"id": 103, "label": "      // :: error: (assignment)", "line": 103, "node_type": "stmt"},
    {"id": 104, "label": "    @Positive", "line": 104, "node_type": "stmt"},
    {"id": 105, "label": "      @LTLengthOf(value = \"a\", offset = \"c+1\") int j = b;", "line": 105, "node_type": "stmt"},
    {"id": 106, "label": "    }", "line": 106, "node_type": "stmt"},
    {"id": 107, "label": "  }", "line": 107, "node_type": "stmt"},
    {"id": 108, "label": "", "line": 108, "node_type": "stmt"},
    {"id": 109, "label": "  class Derived extends Base {", "line": 109, "node_type": "stmt"},
    {"id": 110, "label": "    public int x;", "line": 110, "node_type": "stmt"},
    {"id": 111, "label": "", "line": 111, "node_type": "stmt"},
    {"id": 112, "label": "    @Override", "line": 112, "node_type": "stmt"},
    {"id": 113, "label": "    @EnsuresLTLIf(", "line": 113, "node_type": "stmt"},
    {"id": 114, "label": "        expression = \"b \",", "line": 114, "node_type": "stmt"},
    {"id": 115, "label": "        targetValue = {\"#1\", \"#1\"},", "line": 115, "node_type": "stmt"},
    {"id": 116, "label": "        targetOffset = {\"#2 + 1\", \"11\"},", "line": 116, "node_type": "stmt"},
    {"id": 117, "label": "        result = true)", "line": 117, "node_type": "stmt"},
    {"id": 118, "label": "    boolean ltlPost(int[] a, int d) {", "line": 118, "node_type": "stmt"},
    {"id": 119, "label": "      return false;", "line": 119, "node_type": "stmt"},
    {"id": 120, "label": "    }", "line": 120, "node_type": "stmt"},
    {"id": 121, "label": "", "line": 121, "node_type": "stmt"},
    {"id": 122, "label": "    @Override", "line": 122, "node_type": "stmt"},
    {"id": 123, "label": "    @RequiresLTL(", "line": 123, "node_type": "stmt"},
    {"id": 124, "label": "        value = \"b \",", "line": 124, "node_type": "stmt"},
    {"id": 125, "label": "        targetValue = {\"#1\", \"#1\"},", "line": 125, "node_type": "stmt"},
    {"id": 126, "label": "        targetOffset = {\"#2 + 1\", \"-11\"})", "line": 126, "node_type": "stmt"},
    {"id": 127, "label": "    void ltlPre(int[] a, int d) {", "line": 127, "node_type": "stmt"},
    {"id": 128, "label": "      @LTLengthOf(", "line": 128, "node_type": "stmt"},
    {"id": 129, "label": "          value = {\"a\", \"a\"},", "line": 129, "node_type": "stmt"},
    {"id": 130, "label": "          offset = {\"d+1\", \"-10\"})", "line": 130, "node_type": "stmt"},
    {"id": 131, "label": "      // :: error: (assignment)", "line": 131, "node_type": "stmt"},
    {"id": 132, "label": "      int i = b;", "line": 132, "node_type": "stmt"},
    {"id": 133, "label": "    }", "line": 133, "node_type": "stmt"},
    {"id": 134, "label": "  }", "line": 134, "node_type": "stmt"},
    {"id": 135, "label": "", "line": 135, "node_type": "stmt"},
    {"id": 136, "label": "  class DerivedInvalid extends Base {", "line": 136, "node_type": "stmt"},
    {"id": 137, "label": "    public int x;", "line": 137, "node_type": "stmt"},
    {"id": 138, "label": "", "line": 138, "node_type": "stmt"},
    {"id": 139, "label": "    @Override", "line": 139, "node_type": "stmt"},
    {"id": 140, "label": "    @EnsuresLTLIf(", "line": 140, "node_type": "stmt"},
    {"id": 141, "label": "        expression = \"b \",", "line": 141, "node_type": "stmt"},
    {"id": 142, "label": "        targetValue = {\"#1\", \"#1\"},", "line": 142, "node_type": "stmt"},
    {"id": 143, "label": "        targetOffset = {\"#2 + 1\", \"9\"},", "line": 143, "node_type": "stmt"},
    {"id": 144, "label": "        result = true)", "line": 144, "node_type": "stmt"},
    {"id": 145, "label": "    // :: error: (contracts.conditional.postcondition.true.override)", "line": 145, "node_type": "stmt"},
    {"id": 146, "label": "    boolean ltlPost(int[] a, int c) {", "line": 146, "node_type": "stmt"},
    {"id": 147, "label": "      // :: error: (contracts.conditional.postcondition)", "line": 147, "node_type": "stmt"},
    {"id": 148, "label": "      return true;", "line": 148, "node_type": "stmt"},
    {"id": 149, "label": "    }", "line": 149, "node_type": "stmt"}
  ],
  "control_edges": [
    {"source": 61, "target": 62, "type": "control"},
    {"source": 62, "target": 63, "type": "control"},
    {"source": 63, "target": 64, "type": "control"},
    {"source": 64, "target": 65, "type": "control"},
    {"source": 65, "target": 66, "type": "control"},
    {"source": 66, "target": 67, "type": "control"},
    {"source": 67, "target": 68, "type": "control"},
    {"source": 68, "target": 69, "type": "control"},
    {"source": 69, "target": 70, "type": "control"},
    {"source": 70, "target": 71, "type": "control"},
    {"source": 71, "target": 72, "type": "control"},
    {"source": 72, "target": 73, "type": "control"},
    {"source": 73, "target": 74, "type": "control"},
    {"source": 74, "target": 75, "type": "control"},
    {"source": 75, "target": 76, "type": "control"},
    {"source": 76, "target": 77, "type": "control"},
    {"source": 77, "target": 78, "type": "control"},
    {"source": 78, "target": 79, "type": "control"},
    {"source": 79, "target": 80, "type": "control"},
    {"source": 80, "target": 81, "type": "control"},
    {"source": 81, "target": 82, "type": "control"},
    {"source": 82, "target": 83, "type": "control"},
    {"source": 83, "target": 84, "type": "control"},
    {"source": 84, "target": 85, "type": "control"},
    {"source": 85, "target": 86, "type": "control"},
    {"source": 86, "target": 87, "type": "control"},
    {"source": 87, "target": 88, "type": "control"},
    {"source": 88, "target": 89, "type": "control"},
    {"source": 89, "target": 90, "type": "control"},
    {"source": 90, "target": 91, "type": "control"},
    {"source": 91, "target": 92, "type": "control"},
    {"source": 92, "target": 93, "type": "control"},
    {"source": 93, "target": 94, "type": "control"},
    {"source": 94, "target": 95, "type": "control"},
    {"source": 95, "target": 96, "type": "control"},
    {"source": 96, "target": 97, "type": "control"},
    {"source": 97, "target": 98, "type": "control"},
    {"source": 98, "target": 99, "type": "control"},
    {"source": 99, "target": 100, "type": "control"},
    {"source": 100, "target": 101, "type": "control"},
    {"source": 101, "target": 102, "type": "control"},
    {"source": 102, "target": 103, "type": "control"},
    {"source": 103, "target": 104, "type": "control"},
    {"source": 104, "target": 105, "type": "control"},
    {"source": 105, "target": 106, "type": "control"},
    {"source": 106, "target": 107, "type": "control"},
    {"source": 107, "target": 108, "type": "control"},
    {"source": 108, "target": 109, "type": "control"},
    {"source": 109, "target": 110, "type": "control"},
    {"source": 110, "target": 111, "type": "control"},
    {"source": 111, "target": 112, "type": "control"},
    {"source": 112, "target": 113, "type": "control"},
    {"source": 113, "target": 114, "type": "control"},
    {"source": 114, "target": 115, "type": "control"},
    {"source": 115, "target": 116, "type": "control"},
    {"source": 116, "target": 117, "type": "control"},
    {"source": 117, "target": 118, "type": "control"},
    {"source": 118, "target": 119, "type": "control"},
    {"source": 119, "target": 120, "type": "control"},
    {"source": 120, "target": 121, "type": "control"},
    {"source": 121, "target": 122, "type": "control"},
    {"source": 122, "target": 123, "type": "control"},
    {"source": 123, "target": 124, "type": "control"},
    {"source": 124, "target": 125, "type": "control"},
    {"source": 125, "target": 126, "type": "control"},
    {"source": 126, "target": 127, "type": "control"},
    {"source": 127, "target": 128, "type": "control"},
    {"source": 128, "target": 129, "type": "control"},
    {"source": 129, "target": 130, "type": "control"},
    {"source": 130, "target": 131, "type": "control"},
    {"source": 131, "target": 132, "type": "control"},
    {"source": 132, "target": 133, "type": "control"},
    {"source": 133, "target": 134, "type": "control"},
    {"source": 134, "target": 135, "type": "control"},
    {"source": 135, "target": 136, "type": "control"},
    {"source": 136, "target": 137, "type": "control"},
    {"source": 137, "target": 138, "type": "control"},
    {"source": 138, "target": 139, "type": "control"},
    {"source": 139, "target": 140, "type": "control"},
    {"source": 140, "target": 141, "type": "control"},
    {"source": 141, "target": 142, "type": "control"},
    {"source": 142, "target": 143, "type": "control"},
    {"source": 143, "target": 144, "type": "control"},
    {"source": 144, "target": 145, "type": "control"},
    {"source": 145, "target": 146, "type": "control"},
    {"source": 146, "target": 147, "type": "control"},
    {"source": 147, "target": 148, "type": "control"},
    {"source": 148, "target": 149, "type": "control"}
  ],
  "dataflow_edges": [
    {"source": 61, "target": 62, "type": "dataflow", "var": "b"},
    {"source": 62, "target": 63, "type": "dataflow", "var": "b"},
    {"source": 63, "target": 66, "type": "dataflow", "var": "b"},
    {"source": 66, "target": 69, "type": "dataflow", "var": "b"},
    {"source": 63, "target": 73, "type": "dataflow", "var": "c"},
    {"source": 69, "target": 74, "type": "dataflow", "var": "b"},
    {"source": 73, "target": 74, "type": "dataflow", "var": "a"},
    {"source": 73, "target": 74, "type": "dataflow", "var": "c"},
    {"source": 68, "target": 81, "type": "dataflow", "var": "EnsuresLTLIf"},
    {"source": 69, "target": 81, "type": "dataflow", "var": "expression"},
    {"source": 74, "target": 81, "type": "dataflow", "var": "b"},
    {"source": 70, "target": 81, "type": "dataflow", "var": "targetValue"},
    {"source": 71, "target": 81, "type": "dataflow", "var": "targetOffset"},
    {"source": 72, "target": 81, "type": "dataflow", "var": "result"},
    {"source": 74, "target": 83, "type": "dataflow", "var": "a"},
    {"source": 74, "target": 83, "type": "dataflow", "var": "c"},
    {"source": 81, "target": 88, "type": "dataflow", "var": "b"},
    {"source": 81, "target": 89, "type": "dataflow", "var": "targetValue"},
    {"source": 81, "target": 90, "type": "dataflow", "var": "targetOffset"},
    {"source": 83, "target": 91, "type": "dataflow", "var": "a"},
    {"source": 83, "target": 91, "type": "dataflow", "var": "c"},
    {"source": 88, "target": 93, "type": "dataflow", "var": "value"},
    {"source": 91, "target": 93, "type": "dataflow", "var": "a"},
    {"source": 91, "target": 93, "type": "dataflow", "var": "c"},
    {"source": 88, "target": 93, "type": "dataflow", "var": "b"},
    {"source": 93, "target": 96, "type": "dataflow", "var": "a"},
    {"source": 93, "target": 96, "type": "dataflow", "var": "c"},
    {"source": 73, "target": 97, "type": "dataflow", "var": "ltlPost"},
    {"source": 96, "target": 97, "type": "dataflow", "var": "a"},
    {"source": 96, "target": 97, "type": "dataflow", "var": "c"},
    {"source": 92, "target": 98, "type": "dataflow", "var": "Positive"},
    {"source": 93, "target": 99, "type": "dataflow", "var": "LTLengthOf"},
    {"source": 93, "target": 99, "type": "dataflow", "var": "value"},
    {"source": 97, "target": 99, "type": "dataflow", "var": "a"},
    {"source": 93, "target": 99, "type": "dataflow", "var": "offset"},
    {"source": 97, "target": 99, "type": "dataflow", "var": "c"},
    {"source": 93, "target": 99, "type": "dataflow", "var": "i"},
    {"source": 93, "target": 99, "type": "dataflow", "var": "b"},
    {"source": 91, "target": 101, "type": "dataflow", "var": "ltlPre"},
    {"source": 99, "target": 101, "type": "dataflow", "var": "a"},
    {"source": 99, "target": 101, "type": "dataflow", "var": "c"},
    {"source": 82, "target": 103, "type": "dataflow", "var": "error"},
    {"source": 98, "target": 104, "type": "dataflow", "var": "Positive"},
    {"source": 99, "target": 105, "type": "dataflow", "var": "LTLengthOf"},
    {"source": 99, "target": 105, "type": "dataflow", "var": "value"},
    {"source": 101, "target": 105, "type": "dataflow", "var": "a"},
    {"source": 99, "target": 105, "type": "dataflow", "var": "offset"},
    {"source": 101, "target": 105, "type": "dataflow", "var": "c"},
    {"source": 99, "target": 105, "type": "dataflow", "var": "b"},
    {"source": 81, "target": 113, "type": "dataflow", "var": "EnsuresLTLIf"},
    {"source": 81, "target": 114, "type": "dataflow", "var": "expression"},
    {"source": 105, "target": 114, "type": "dataflow", "var": "b"},
    {"source": 89, "target": 115, "type": "dataflow", "var": "targetValue"},
    {"source": 90, "target": 116, "type": "dataflow", "var": "targetOffset"},
    {"source": 81, "target": 117, "type": "dataflow", "var": "result"},
    {"source": 97, "target": 118, "type": "dataflow", "var": "ltlPost"},
    {"source": 105, "target": 118, "type": "dataflow", "var": "a"},
    {"source": 112, "target": 122, "type": "dataflow", "var": "Override"},
    {"source": 87, "target": 123, "type": "dataflow", "var": "RequiresLTL"},
    {"source": 105, "target": 124, "type": "dataflow", "var": "value"},
    {"source": 114, "target": 124, "type": "dataflow", "var": "b"},
    {"source": 115, "target": 125, "type": "dataflow", "var": "targetValue"},
    {"source": 116, "target": 126, "type": "dataflow", "var": "targetOffset"},
    {"source": 101, "target": 127, "type": "dataflow", "var": "ltlPre"},
    {"source": 118, "target": 127, "type": "dataflow", "var": "a"},
    {"source": 118, "target": 127, "type": "dataflow", "var": "d"},
    {"source": 105, "target": 128, "type": "dataflow", "var": "LTLengthOf"},
    {"source": 124, "target": 129, "type": "dataflow", "var": "value"},
    {"source": 127, "target": 129, "type": "dataflow", "var": "a"},
    {"source": 105, "target": 130, "type": "dataflow", "var": "offset"},
    {"source": 127, "target": 130, "type": "dataflow", "var": "d"},
    {"source": 103, "target": 131, "type": "dataflow", "var": "error"},
    {"source": 103, "target": 131, "type": "dataflow", "var": "assignment"},
    {"source": 99, "target": 132, "type": "dataflow", "var": "i"},
    {"source": 124, "target": 132, "type": "dataflow", "var": "b"},
    {"source": 109, "target": 136, "type": "dataflow", "var": "Base"},
    {"source": 110, "target": 137, "type": "dataflow", "var": "x"},
    {"source": 122, "target": 139, "type": "dataflow", "var": "Override"},
    {"source": 113, "target": 140, "type": "dataflow", "var": "EnsuresLTLIf"},
    {"source": 114, "target": 141, "type": "dataflow", "var": "expression"},
    {"source": 132, "target": 141, "type": "dataflow", "var": "b"},
    {"source": 125, "target": 142, "type": "dataflow", "var": "targetValue"},
    {"source": 126, "target": 143, "type": "dataflow", "var": "targetOffset"},
    {"source": 117, "target": 144, "type": "dataflow", "var": "result"},
    {"source": 131, "target": 145, "type": "dataflow", "var": "error"},
    {"source": 118, "target": 146, "type": "dataflow", "var": "ltlPost"},
    {"source": 129, "target": 146, "type": "dataflow", "var": "a"},
    {"source": 105, "target": 146, "type": "dataflow", "var": "c"},
    {"source": 145, "target": 147, "type": "dataflow", "var": "error"},
    {"source": 145, "target": 147, "type": "dataflow", "var": "contracts"},
    {"source": 145, "target": 147, "type": "dataflow", "var": "conditional"},
    {"source": 145, "target": 147, "type": "dataflow", "var": "postcondition"}
  ]
}
