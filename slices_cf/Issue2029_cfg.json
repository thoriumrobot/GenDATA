{
  "method_name": "LessThanOffsetUpperBound",
  "nodes": [
    {"id": 6, "label": "    @Positive", "line": 6, "node_type": "stmt"},
    {"id": 7, "label": "  void lessThanUpperBound(@NonNegative @LessThan(\"#2\") int index, @NonNegative int size, char val) {", "line": 7, "node_type": "stmt"},
    {"id": 8, "label": "    char[] arr = new char[size];", "line": 8, "node_type": "stmt"},
    {"id": 9, "label": "    arr[index] = val;", "line": 9, "node_type": "stmt"},
    {"id": 10, "label": "  }", "line": 10, "node_type": "stmt"},
    {"id": 11, "label": "", "line": 11, "node_type": "stmt"},
    {"id": 12, "label": "  void LessThanOffsetLowerBound(", "line": 12, "node_type": "stmt"},
    {"id": 13, "label": "    @Positive", "line": 13, "node_type": "stmt"},
    {"id": 14, "label": "      int[] array, @NonNegative @LTLengthOf(\"#1\") int n, @NonNegative @LessThan(\"#2 + 1\") int k) {", "line": 14, "node_type": "stmt"},
    {"id": 15, "label": "    array[n - k] = 10;", "line": 15, "node_type": "stmt"},
    {"id": 16, "label": "  }", "line": 16, "node_type": "stmt"},
    {"id": 17, "label": "", "line": 17, "node_type": "stmt"},
    {"id": 18, "label": "  void LessThanOffsetUpperBound(", "line": 18, "node_type": "stmt"},
    {"id": 19, "label": "      @NonNegative int n,", "line": 19, "node_type": "stmt"},
    {"id": 20, "label": "      @NonNegative @LessThan(\"#1 + 1\") int k,", "line": 20, "node_type": "stmt"},
    {"id": 21, "label": "    @Positive", "line": 21, "node_type": "stmt"},
    {"id": 22, "label": "      @NonNegative int size,", "line": 22, "node_type": "stmt"},
    {"id": 23, "label": "    @NonNegative", "line": 23, "node_type": "stmt"},
    {"id": 24, "label": "      @NonNegative @LessThan(\"#3 + 1\") int index) {", "line": 24, "node_type": "stmt"},
    {"id": 25, "label": "    @NonNegative int m = n - k;", "line": 25, "node_type": "stmt"},
    {"id": 26, "label": "    @Positive", "line": 26, "node_type": "stmt"},
    {"id": 27, "label": "    int[] arr = new int[size];", "line": 27, "node_type": "stmt"},
    {"id": 28, "label": "    // :: error: (unary.increment)", "line": 28, "node_type": "stmt"},
    {"id": 29, "label": "    for (; index < arr.length - 1; index++) {", "line": 29, "node_type": "stmt"},
    {"id": 30, "label": "      arr[index] = 10;", "line": 30, "node_type": "stmt"},
    {"id": 31, "label": "    }", "line": 31, "node_type": "stmt"},
    {"id": 32, "label": "  }", "line": 32, "node_type": "stmt"}
  ],
  "control_edges": [
    {"source": 6, "target": 7, "type": "control"},
    {"source": 7, "target": 8, "type": "control"},
    {"source": 8, "target": 9, "type": "control"},
    {"source": 9, "target": 10, "type": "control"},
    {"source": 10, "target": 11, "type": "control"},
    {"source": 11, "target": 12, "type": "control"},
    {"source": 12, "target": 13, "type": "control"},
    {"source": 13, "target": 14, "type": "control"},
    {"source": 14, "target": 15, "type": "control"},
    {"source": 15, "target": 16, "type": "control"},
    {"source": 16, "target": 17, "type": "control"},
    {"source": 17, "target": 18, "type": "control"},
    {"source": 18, "target": 19, "type": "control"},
    {"source": 19, "target": 20, "type": "control"},
    {"source": 20, "target": 21, "type": "control"},
    {"source": 21, "target": 22, "type": "control"},
    {"source": 22, "target": 23, "type": "control"},
    {"source": 23, "target": 24, "type": "control"},
    {"source": 24, "target": 25, "type": "control"},
    {"source": 25, "target": 26, "type": "control"},
    {"source": 26, "target": 27, "type": "control"},
    {"source": 27, "target": 28, "type": "control"},
    {"source": 28, "target": 29, "type": "control"},
    {"source": 29, "target": 30, "type": "control"},
    {"source": 30, "target": 31, "type": "control"},
    {"source": 31, "target": 32, "type": "control"}
  ],
  "dataflow_edges": [
    {"source": 7, "target": 8, "type": "dataflow", "var": "size"},
    {"source": 8, "target": 9, "type": "dataflow", "var": "arr"},
    {"source": 7, "target": 9, "type": "dataflow", "var": "index"},
    {"source": 7, "target": 9, "type": "dataflow", "var": "val"},
    {"source": 6, "target": 13, "type": "dataflow", "var": "Positive"},
    {"source": 7, "target": 14, "type": "dataflow", "var": "NonNegative"},
    {"source": 7, "target": 14, "type": "dataflow", "var": "LessThan"},
    {"source": 14, "target": 15, "type": "dataflow", "var": "array"},
    {"source": 14, "target": 15, "type": "dataflow", "var": "n"},
    {"source": 14, "target": 15, "type": "dataflow", "var": "k"},
    {"source": 14, "target": 19, "type": "dataflow", "var": "NonNegative"},
    {"source": 15, "target": 19, "type": "dataflow", "var": "n"},
    {"source": 19, "target": 20, "type": "dataflow", "var": "NonNegative"},
    {"source": 14, "target": 20, "type": "dataflow", "var": "LessThan"},
    {"source": 15, "target": 20, "type": "dataflow", "var": "k"},
    {"source": 13, "target": 21, "type": "dataflow", "var": "Positive"},
    {"source": 20, "target": 22, "type": "dataflow", "var": "NonNegative"},
    {"source": 8, "target": 22, "type": "dataflow", "var": "size"},
    {"source": 22, "target": 23, "type": "dataflow", "var": "NonNegative"},
    {"source": 23, "target": 24, "type": "dataflow", "var": "NonNegative"},
    {"source": 20, "target": 24, "type": "dataflow", "var": "LessThan"},
    {"source": 9, "target": 24, "type": "dataflow", "var": "index"},
    {"source": 24, "target": 25, "type": "dataflow", "var": "NonNegative"},
    {"source": 19, "target": 25, "type": "dataflow", "var": "n"},
    {"source": 20, "target": 25, "type": "dataflow", "var": "k"},
    {"source": 21, "target": 26, "type": "dataflow", "var": "Positive"},
    {"source": 9, "target": 27, "type": "dataflow", "var": "arr"},
    {"source": 22, "target": 27, "type": "dataflow", "var": "size"},
    {"source": 24, "target": 29, "type": "dataflow", "var": "index"},
    {"source": 27, "target": 29, "type": "dataflow", "var": "arr"},
    {"source": 29, "target": 30, "type": "dataflow", "var": "arr"},
    {"source": 29, "target": 30, "type": "dataflow", "var": "index"}
  ]
}
