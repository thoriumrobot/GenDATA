{
  "method_name": "isInterned",
  "java_file": null,
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 2,
      "label": "If(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===))",
      "line": 82,
      "node_type": "control"
    },
    {
      "id": 3,
      "label": "Return(Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true))",
      "line": 106,
      "node_type": "control"
    },
    {
      "id": 4,
      "label": "If(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None), operator=instanceof))",
      "line": 85,
      "node_type": "control"
    },
    {
      "id": 5,
      "label": "Return(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Cast(expression=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=ReferenceType(arguments=None, dimensions=[], name=String, sub_type=None)), operator===))",
      "line": 86,
      "node_type": "control"
    },
    {
      "id": 6,
      "label": "If(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None), operator=instanceof))",
      "line": 87,
      "node_type": "control"
    },
    {
      "id": 7,
      "label": "Return(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[Cast(expression=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=ReferenceType(arguments=None, dimensions=[None], name=String, sub_type=None))], member=intern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator===))",
      "line": 88,
      "node_type": "control"
    },
    {
      "id": 8,
      "label": "If(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Integer, sub_type=None), operator=instanceof))",
      "line": 89,
      "node_type": "control"
    },
    {
      "id": 9,
      "label": "Return(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[Cast(expression=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=ReferenceType(arguments=None, dimensions=[], name=Integer, sub_type=None))], member=intern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator===))",
      "line": 90,
      "node_type": "control"
    },
    {
      "id": 10,
      "label": "If(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Long, sub_type=None), operator=instanceof))",
      "line": 91,
      "node_type": "control"
    },
    {
      "id": 11,
      "label": "Return(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[Cast(expression=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=ReferenceType(arguments=None, dimensions=[], name=Long, sub_type=None))], member=intern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator===))",
      "line": 92,
      "node_type": "control"
    },
    {
      "id": 12,
      "label": "If(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=int), operator=instanceof))",
      "line": 93,
      "node_type": "control"
    },
    {
      "id": 13,
      "label": "Return(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[Cast(expression=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=BasicType(dimensions=[None], name=int))], member=intern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator===))",
      "line": 94,
      "node_type": "control"
    },
    {
      "id": 14,
      "label": "If(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=long), operator=instanceof))",
      "line": 95,
      "node_type": "control"
    },
    {
      "id": 15,
      "label": "Return(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[Cast(expression=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=BasicType(dimensions=[None], name=long))], member=intern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator===))",
      "line": 96,
      "node_type": "control"
    },
    {
      "id": 16,
      "label": "If(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[], name=Double, sub_type=None), operator=instanceof))",
      "line": 97,
      "node_type": "control"
    },
    {
      "id": 17,
      "label": "Return(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[Cast(expression=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=ReferenceType(arguments=None, dimensions=[], name=Double, sub_type=None))], member=intern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator===))",
      "line": 98,
      "node_type": "control"
    },
    {
      "id": 18,
      "label": "If(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=BasicType(dimensions=[None], name=double), operator=instanceof))",
      "line": 99,
      "node_type": "control"
    },
    {
      "id": 19,
      "label": "Return(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[Cast(expression=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=BasicType(dimensions=[None], name=double))], member=intern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator===))",
      "line": 100,
      "node_type": "control"
    },
    {
      "id": 20,
      "label": "If(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None), operator=instanceof))",
      "line": 101,
      "node_type": "control"
    },
    {
      "id": 21,
      "label": "Return(BinaryOperation(operandl=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=MethodInvocation(arguments=[Cast(expression=MemberReference(member=value, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type=ReferenceType(arguments=None, dimensions=[None], name=Object, sub_type=None))], member=intern, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), operator===))",
      "line": 102,
      "node_type": "control"
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 4
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 6
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 6,
      "target": 8
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 8,
      "target": 10
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 10,
      "target": 12
    },
    {
      "source": 12,
      "target": 13
    },
    {
      "source": 12,
      "target": 14
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 14,
      "target": 16
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 18
    },
    {
      "source": 18,
      "target": 19
    },
    {
      "source": 18,
      "target": 20
    },
    {
      "source": 20,
      "target": 21
    },
    {
      "source": 20,
      "target": 3
    }
  ],
  "control_edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 4
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 6
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 6,
      "target": 8
    },
    {
      "source": 8,
      "target": 9
    },
    {
      "source": 8,
      "target": 10
    },
    {
      "source": 10,
      "target": 11
    },
    {
      "source": 10,
      "target": 12
    },
    {
      "source": 12,
      "target": 13
    },
    {
      "source": 12,
      "target": 14
    },
    {
      "source": 14,
      "target": 15
    },
    {
      "source": 14,
      "target": 16
    },
    {
      "source": 16,
      "target": 17
    },
    {
      "source": 16,
      "target": 18
    },
    {
      "source": 18,
      "target": 19
    },
    {
      "source": 18,
      "target": 20
    },
    {
      "source": 20,
      "target": 21
    },
    {
      "source": 20,
      "target": 3
    }
  ],
  "dataflow_edges": []
}