{
  "method_name": "exdent",
  "java_file": null,
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 2,
      "label": "If(MemberReference(member=enabled, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 235,
      "node_type": "control"
    },
    {
      "id": 3,
      "label": "If(MethodInvocation(arguments=[], member=isEmpty, postfix_operators=[], prefix_operators=[], qualifier=start_times, selectors=[], type_arguments=None))",
      "line": 236,
      "node_type": "control"
    },
    {
      "id": 4,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MemberReference(member=always_traceback, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), name=old_always_traceback)], modifiers=set(), type=BasicType(dimensions=[], name=boolean))",
      "line": 237,
      "node_type": "control"
    },
    {
      "id": 5,
      "label": "Assignment(expressionl=MemberReference(member=always_traceback, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true))",
      "line": 238,
      "node_type": "control"
    },
    {
      "id": 6,
      "label": "MethodInvocation(arguments=[], member=setLogfile, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)",
      "line": 239,
      "node_type": "control"
    },
    {
      "id": 7,
      "label": "MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"Called exdent when indentation was 0.\")], member=log, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)",
      "line": 240,
      "node_type": "control"
    },
    {
      "id": 8,
      "label": "Assignment(expressionl=MemberReference(member=always_traceback, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MemberReference(member=old_always_traceback, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))",
      "line": 241,
      "node_type": "control"
    },
    {
      "id": 9,
      "label": "Assignment(expressionl=MemberReference(member=indent_str, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), type==, value=MethodInvocation(arguments=[Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0), BinaryOperation(operandl=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=indent_str, selectors=[], type_arguments=None), operandr=MethodInvocation(arguments=[], member=length, postfix_operators=[], prefix_operators=[], qualifier=INDENT_STR_ONE_LEVEL, selectors=[], type_arguments=None), operator=-)], member=substring, postfix_operators=[], prefix_operators=[], qualifier=indent_str, selectors=[], type_arguments=None))",
      "line": 243,
      "node_type": "control"
    },
    {
      "id": 10,
      "label": "MethodInvocation(arguments=[], member=pop_start_time, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)",
      "line": 244,
      "node_type": "control"
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 1
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 9
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 4,
      "target": 8,
      "variable": "old_always_traceback"
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 8,
      "target": 1
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 10,
      "target": 1
    }
  ],
  "control_edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 1
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 9
    },
    {
      "source": 4,
      "target": 5
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 7,
      "target": 8
    },
    {
      "source": 8,
      "target": 1
    },
    {
      "source": 9,
      "target": 10
    },
    {
      "source": 10,
      "target": 1
    }
  ],
  "dataflow_edges": [
    {
      "source": 4,
      "target": 8,
      "variable": "old_always_traceback"
    }
  ]
}