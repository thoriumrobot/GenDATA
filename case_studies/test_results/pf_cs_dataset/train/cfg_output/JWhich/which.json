{
  "method_name": "which",
  "java_file": null,
  "nodes": [
    {
      "id": 0,
      "label": "Entry",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 1,
      "label": "Exit",
      "line": null,
      "node_type": "control"
    },
    {
      "id": 2,
      "label": "LocalVariableDeclaration(annotations=[], declarators=[VariableDeclarator(dimensions=[], initializer=MethodInvocation(arguments=[MemberReference(member=className, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], member=findClass, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None), name=classUrl)], modifiers=set(), type=ReferenceType(arguments=None, dimensions=[], name=URL, sub_type=None))",
      "line": 92,
      "node_type": "control"
    },
    {
      "id": 3,
      "label": "If(BinaryOperation(operandl=MemberReference(member=classUrl, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null), operator===))",
      "line": 94,
      "node_type": "control"
    },
    {
      "id": 4,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"\\nClass '\"), operandr=MemberReference(member=className, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"' not found.\"), operator=+)], member=println, postfix_operators=[], prefix_operators=[], qualifier=System.out, selectors=[], type_arguments=None)",
      "line": 95,
      "node_type": "control"
    },
    {
      "id": 5,
      "label": "MethodInvocation(arguments=[BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"\\nClass '\"), operandr=MemberReference(member=className, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"' found in \\n'\"), operator=+), operandr=MethodInvocation(arguments=[], member=getFile, postfix_operators=[], prefix_operators=[], qualifier=classUrl, selectors=[], type_arguments=None), operator=+), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=\"'\"), operator=+)], member=println, postfix_operators=[], prefix_operators=[], qualifier=System.out, selectors=[], type_arguments=None)",
      "line": 97,
      "node_type": "control"
    },
    {
      "id": 6,
      "label": "MethodInvocation(arguments=[], member=validate, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)",
      "line": 100,
      "node_type": "control"
    },
    {
      "id": 7,
      "label": "MethodInvocation(arguments=[], member=printClasspath, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[], type_arguments=None)",
      "line": 102,
      "node_type": "control"
    }
  ],
  "edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 2,
      "target": 3,
      "variable": "classUrl"
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 5
    },
    {
      "source": 4,
      "target": 6
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 7,
      "target": 1
    },
    {
      "source": 7,
      "target": 1
    }
  ],
  "control_edges": [
    {
      "source": 0,
      "target": 2
    },
    {
      "source": 2,
      "target": 3
    },
    {
      "source": 3,
      "target": 4
    },
    {
      "source": 3,
      "target": 5
    },
    {
      "source": 4,
      "target": 6
    },
    {
      "source": 5,
      "target": 6
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 6,
      "target": 7
    },
    {
      "source": 7,
      "target": 1
    },
    {
      "source": 7,
      "target": 1
    }
  ],
  "dataflow_edges": [
    {
      "source": 2,
      "target": 3,
      "variable": "classUrl"
    }
  ]
}