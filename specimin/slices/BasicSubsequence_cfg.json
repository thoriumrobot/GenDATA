{
  "method_name": "slice",
  "nodes": [
    {"id": 3, "label": "public class BasicSubsequence {", "line": 3, "node_type": "stmt"},
    {"id": 4, "label": "  // :: error: (not.final)", "line": 4, "node_type": "stmt"},
    {"id": 5, "label": "  @HasSubsequence(subsequence = \"this\", from = \"this.x\", to = \"this.y\")", "line": 5, "node_type": "stmt"},
    {"id": 6, "label": "  int[] b;", "line": 6, "node_type": "stmt"},
    {"id": 7, "label": "", "line": 7, "node_type": "stmt"},
    {"id": 8, "label": "  int x;", "line": 8, "node_type": "stmt"},
    {"id": 9, "label": "  int y;", "line": 9, "node_type": "stmt"},
    {"id": 10, "label": "", "line": 10, "node_type": "stmt"},
    {"id": 11, "label": "  void test2(@NonNegative @LessThan(\"y + 1\") int x1, int[] a) {", "line": 11, "node_type": "stmt"},
    {"id": 12, "label": "    x = x1;", "line": 12, "node_type": "stmt"},
    {"id": 13, "label": "    // :: error: (to.not.ltel)", "line": 13, "node_type": "stmt"},
    {"id": 14, "label": "    b = a;", "line": 14, "node_type": "stmt"},
    {"id": 15, "label": "  }", "line": 15, "node_type": "stmt"},
    {"id": 16, "label": "", "line": 16, "node_type": "stmt"},
    {"id": 17, "label": "  void test3(@NonNegative @LessThan(\"y\") int x1, int[] a) {", "line": 17, "node_type": "stmt"},
    {"id": 18, "label": "    x = x1;", "line": 18, "node_type": "stmt"},
    {"id": 19, "label": "    // :: error: (to.not.ltel)", "line": 19, "node_type": "stmt"},
    {"id": 20, "label": "    b = a;", "line": 20, "node_type": "stmt"},
    {"id": 21, "label": "  }", "line": 21, "node_type": "stmt"},
    {"id": 22, "label": "", "line": 22, "node_type": "stmt"},
    {"id": 23, "label": "  void test4(@NonNegative int x1, int[] a) {", "line": 23, "node_type": "stmt"}
  ],
  "control_edges": [
    {"source": 3, "target": 4, "type": "control"},
    {"source": 4, "target": 5, "type": "control"},
    {"source": 5, "target": 6, "type": "control"},
    {"source": 6, "target": 7, "type": "control"},
    {"source": 7, "target": 8, "type": "control"},
    {"source": 8, "target": 9, "type": "control"},
    {"source": 9, "target": 10, "type": "control"},
    {"source": 10, "target": 11, "type": "control"},
    {"source": 11, "target": 12, "type": "control"},
    {"source": 12, "target": 13, "type": "control"},
    {"source": 13, "target": 14, "type": "control"},
    {"source": 14, "target": 15, "type": "control"},
    {"source": 15, "target": 16, "type": "control"},
    {"source": 16, "target": 17, "type": "control"},
    {"source": 17, "target": 18, "type": "control"},
    {"source": 18, "target": 19, "type": "control"},
    {"source": 19, "target": 20, "type": "control"},
    {"source": 20, "target": 21, "type": "control"},
    {"source": 21, "target": 22, "type": "control"},
    {"source": 22, "target": 23, "type": "control"}
  ],
  "dataflow_edges": [
    {"source": 5, "target": 8, "type": "dataflow", "var": "x"},
    {"source": 5, "target": 9, "type": "dataflow", "var": "y"},
    {"source": 9, "target": 11, "type": "dataflow", "var": "y"},
    {"source": 8, "target": 12, "type": "dataflow", "var": "x"},
    {"source": 11, "target": 12, "type": "dataflow", "var": "x1"},
    {"source": 4, "target": 13, "type": "dataflow", "var": "error"},
    {"source": 5, "target": 13, "type": "dataflow", "var": "to"},
    {"source": 4, "target": 13, "type": "dataflow", "var": "not"},
    {"source": 6, "target": 14, "type": "dataflow", "var": "b"},
    {"source": 11, "target": 14, "type": "dataflow", "var": "a"},
    {"source": 11, "target": 17, "type": "dataflow", "var": "NonNegative"},
    {"source": 11, "target": 17, "type": "dataflow", "var": "LessThan"},
    {"source": 11, "target": 17, "type": "dataflow", "var": "y"},
    {"source": 12, "target": 17, "type": "dataflow", "var": "x1"},
    {"source": 14, "target": 17, "type": "dataflow", "var": "a"},
    {"source": 12, "target": 18, "type": "dataflow", "var": "x"},
    {"source": 17, "target": 18, "type": "dataflow", "var": "x1"},
    {"source": 13, "target": 19, "type": "dataflow", "var": "error"},
    {"source": 13, "target": 19, "type": "dataflow", "var": "to"},
    {"source": 13, "target": 19, "type": "dataflow", "var": "not"},
    {"source": 13, "target": 19, "type": "dataflow", "var": "ltel"},
    {"source": 14, "target": 20, "type": "dataflow", "var": "b"},
    {"source": 17, "target": 20, "type": "dataflow", "var": "a"},
    {"source": 17, "target": 23, "type": "dataflow", "var": "NonNegative"},
    {"source": 18, "target": 23, "type": "dataflow", "var": "x1"},
    {"source": 20, "target": 23, "type": "dataflow", "var": "a"}
  ]
}
