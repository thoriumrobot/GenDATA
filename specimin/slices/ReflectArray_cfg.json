{
  "method_name": "testMinLen",
  "nodes": [
    {"id": 6, "label": "  void testNewInstance(int i) {", "line": 6, "node_type": "stmt"},
    {"id": 7, "label": "    // :: error: (argument)", "line": 7, "node_type": "stmt"},
    {"id": 8, "label": "    Array.newInstance(Object.class, i);", "line": 8, "node_type": "stmt"},
    {"id": 9, "label": "    if (i >= 0) {", "line": 9, "node_type": "stmt"},
    {"id": 10, "label": "      Array.newInstance(Object.class, i);", "line": 10, "node_type": "stmt"},
    {"id": 11, "label": "    }", "line": 11, "node_type": "stmt"},
    {"id": 12, "label": "  }", "line": 12, "node_type": "stmt"},
    {"id": 13, "label": "", "line": 13, "node_type": "stmt"},
    {"id": 14, "label": "  void testFor(Object a) {", "line": 14, "node_type": "stmt"},
    {"id": 15, "label": "    for (int i = 0; i < Array.getLength(a); ++i) {", "line": 15, "node_type": "stmt"},
    {"id": 16, "label": "      Array.setInt(a, i, 1 + Array.getInt(a, i));", "line": 16, "node_type": "stmt"},
    {"id": 17, "label": "    }", "line": 17, "node_type": "stmt"},
    {"id": 18, "label": "  }", "line": 18, "node_type": "stmt"},
    {"id": 19, "label": "", "line": 19, "node_type": "stmt"},
    {"id": 20, "label": "  void testMinLen(Object @MinLen(1) [] a) {", "line": 20, "node_type": "stmt"},
    {"id": 21, "label": "    Array.get(a, 0);", "line": 21, "node_type": "stmt"},
    {"id": 22, "label": "    // :: error: (argument)", "line": 22, "node_type": "stmt"},
    {"id": 23, "label": "    Array.get(a, 1);", "line": 23, "node_type": "stmt"},
    {"id": 24, "label": "  }", "line": 24, "node_type": "stmt"}
  ],
  "control_edges": [
    {"source": 6, "target": 7, "type": "control"},
    {"source": 7, "target": 8, "type": "control"},
    {"source": 8, "target": 9, "type": "control"},
    {"source": 9, "target": 10, "type": "control"},
    {"source": 10, "target": 11, "type": "control"},
    {"source": 11, "target": 12, "type": "control"},
    {"source": 12, "target": 13, "type": "control"},
    {"source": 13, "target": 14, "type": "control"},
    {"source": 14, "target": 15, "type": "control"},
    {"source": 15, "target": 16, "type": "control"},
    {"source": 16, "target": 17, "type": "control"},
    {"source": 17, "target": 18, "type": "control"},
    {"source": 18, "target": 19, "type": "control"},
    {"source": 19, "target": 20, "type": "control"},
    {"source": 20, "target": 21, "type": "control"},
    {"source": 21, "target": 22, "type": "control"},
    {"source": 22, "target": 23, "type": "control"},
    {"source": 23, "target": 24, "type": "control"}
  ],
  "dataflow_edges": [
    {"source": 6, "target": 8, "type": "dataflow", "var": "i"},
    {"source": 8, "target": 9, "type": "dataflow", "var": "i"},
    {"source": 8, "target": 10, "type": "dataflow", "var": "Array"},
    {"source": 8, "target": 10, "type": "dataflow", "var": "newInstance"},
    {"source": 8, "target": 10, "type": "dataflow", "var": "Object"},
    {"source": 9, "target": 10, "type": "dataflow", "var": "i"},
    {"source": 10, "target": 14, "type": "dataflow", "var": "Object"},
    {"source": 10, "target": 15, "type": "dataflow", "var": "i"},
    {"source": 10, "target": 15, "type": "dataflow", "var": "Array"},
    {"source": 14, "target": 15, "type": "dataflow", "var": "a"},
    {"source": 15, "target": 16, "type": "dataflow", "var": "Array"},
    {"source": 15, "target": 16, "type": "dataflow", "var": "a"},
    {"source": 15, "target": 16, "type": "dataflow", "var": "i"},
    {"source": 14, "target": 20, "type": "dataflow", "var": "Object"},
    {"source": 16, "target": 20, "type": "dataflow", "var": "a"},
    {"source": 16, "target": 21, "type": "dataflow", "var": "Array"},
    {"source": 20, "target": 21, "type": "dataflow", "var": "a"},
    {"source": 7, "target": 22, "type": "dataflow", "var": "error"},
    {"source": 7, "target": 22, "type": "dataflow", "var": "argument"},
    {"source": 21, "target": 23, "type": "dataflow", "var": "Array"},
    {"source": 21, "target": 23, "type": "dataflow", "var": "get"},
    {"source": 21, "target": 23, "type": "dataflow", "var": "a"}
  ]
}
