{
  "method_name": "testLength",
  "nodes": [
    {"id": 20, "label": "  void testNewArraySameLen(String s) {", "line": 20, "node_type": "stmt"},
    {"id": 21, "label": "    int @SameLen(\"s\") [] array = new int[s.length()];", "line": 21, "node_type": "stmt"},
    {"id": 22, "label": "    // ::  error: (assignment)", "line": 22, "node_type": "stmt"},
    {"id": 23, "label": "    int @SameLen(\"s\") [] array1 = new int[s.length() + 1];", "line": 23, "node_type": "stmt"},
    {"id": 24, "label": "  }", "line": 24, "node_type": "stmt"},
    {"id": 25, "label": "", "line": 25, "node_type": "stmt"},
    {"id": 26, "label": "  void testStringAssignSameLen(String s, String r) {", "line": 26, "node_type": "stmt"},
    {"id": 27, "label": "    @SameLen(\"s\") String t = s;", "line": 27, "node_type": "stmt"},
    {"id": 28, "label": "    // ::  error: (assignment)", "line": 28, "node_type": "stmt"},
    {"id": 29, "label": "    @SameLen(\"s\") String tN = r;", "line": 29, "node_type": "stmt"},
    {"id": 30, "label": "  }", "line": 30, "node_type": "stmt"},
    {"id": 31, "label": "", "line": 31, "node_type": "stmt"},
    {"id": 32, "label": "  void testStringLenEqualSameLen(String s, String r) {", "line": 32, "node_type": "stmt"},
    {"id": 33, "label": "    if (s.length() == r.length()) {", "line": 33, "node_type": "stmt"},
    {"id": 34, "label": "      @SameLen(\"s\") String tN = r;", "line": 34, "node_type": "stmt"},
    {"id": 35, "label": "    }", "line": 35, "node_type": "stmt"},
    {"id": 36, "label": "  }", "line": 36, "node_type": "stmt"},
    {"id": 37, "label": "", "line": 37, "node_type": "stmt"},
    {"id": 38, "label": "  void testStringEqualSameLen(String s, String r) {", "line": 38, "node_type": "stmt"},
    {"id": 39, "label": "    if (s == r) {", "line": 39, "node_type": "stmt"},
    {"id": 40, "label": "      @SameLen(\"s\") String tN = r;", "line": 40, "node_type": "stmt"},
    {"id": 41, "label": "    }", "line": 41, "node_type": "stmt"},
    {"id": 42, "label": "  }", "line": 42, "node_type": "stmt"},
    {"id": 43, "label": "", "line": 43, "node_type": "stmt"},
    {"id": 44, "label": "  void testOffsetRemoval(", "line": 44, "node_type": "stmt"},
    {"id": 45, "label": "      String s,", "line": 45, "node_type": "stmt"},
    {"id": 46, "label": "      String t,", "line": 46, "node_type": "stmt"},
    {"id": 47, "label": "      @LTLengthOf(value = \"#1\", offset = \"#2.length()\") int i,", "line": 47, "node_type": "stmt"},
    {"id": 48, "label": "      @LTLengthOf(value = \"#2\") int j,", "line": 48, "node_type": "stmt"},
    {"id": 49, "label": "      int k) {", "line": 49, "node_type": "stmt"},
    {"id": 50, "label": "    @LTLengthOf(\"s\") int ij = i + j;", "line": 50, "node_type": "stmt"},
    {"id": 51, "label": "    // ::  error: (assignment)", "line": 51, "node_type": "stmt"},
    {"id": 52, "label": "    @LTLengthOf(\"s\") int ik = i + k;", "line": 52, "node_type": "stmt"},
    {"id": 53, "label": "  }", "line": 53, "node_type": "stmt"},
    {"id": 54, "label": "", "line": 54, "node_type": "stmt"},
    {"id": 55, "label": "  void testLengthDivide(@MinLen(1) String s) {", "line": 55, "node_type": "stmt"},
    {"id": 56, "label": "    @IndexFor(\"s\") int i = s.length() / 2;", "line": 56, "node_type": "stmt"},
    {"id": 57, "label": "  }", "line": 57, "node_type": "stmt"},
    {"id": 58, "label": "", "line": 58, "node_type": "stmt"},
    {"id": 59, "label": "  void testAddDivide(@MinLen(1) String s, @IndexFor(\"#1\") int i, @IndexFor(\"#1\") int j) {", "line": 59, "node_type": "stmt"},
    {"id": 60, "label": "    @IndexFor(\"s\") int ij = (i + j) / 2;", "line": 60, "node_type": "stmt"},
    {"id": 61, "label": "  }", "line": 61, "node_type": "stmt"},
    {"id": 62, "label": "", "line": 62, "node_type": "stmt"},
    {"id": 63, "label": "  void testRandomMultiply(@MinLen(1) String s, Random r) {", "line": 63, "node_type": "stmt"},
    {"id": 64, "label": "    @LTLengthOf(\"s\") int i = (int) (Math.random() * s.length());", "line": 64, "node_type": "stmt"},
    {"id": 65, "label": "    @LTLengthOf(\"s\") int j = (int) (r.nextDouble() * s.length());", "line": 65, "node_type": "stmt"},
    {"id": 66, "label": "  }", "line": 66, "node_type": "stmt"},
    {"id": 67, "label": "", "line": 67, "node_type": "stmt"},
    {"id": 68, "label": "  void testNotEqualLength(String s, @IndexOrHigh(\"#1\") int i, @IndexOrHigh(\"#1\") int j) {", "line": 68, "node_type": "stmt"},
    {"id": 69, "label": "    if (i != s.length()) {", "line": 69, "node_type": "stmt"},
    {"id": 70, "label": "      @IndexFor(\"s\") int in = i;", "line": 70, "node_type": "stmt"},
    {"id": 71, "label": "      // ::  error: (assignment)", "line": 71, "node_type": "stmt"},
    {"id": 72, "label": "      @IndexFor(\"s\") int jn = j;", "line": 72, "node_type": "stmt"},
    {"id": 73, "label": "    }", "line": 73, "node_type": "stmt"},
    {"id": 74, "label": "  }", "line": 74, "node_type": "stmt"},
    {"id": 75, "label": "", "line": 75, "node_type": "stmt"},
    {"id": 76, "label": "  void testLength(String s) {", "line": 76, "node_type": "stmt"},
    {"id": 77, "label": "    @IndexOrHigh(\"s\") int i = s.length();", "line": 77, "node_type": "stmt"},
    {"id": 78, "label": "    @LTLengthOf(\"s\") int j = s.length() - 1;", "line": 78, "node_type": "stmt"},
    {"id": 79, "label": "  }", "line": 79, "node_type": "stmt"}
  ],
  "control_edges": [
    {"source": 20, "target": 21, "type": "control"},
    {"source": 21, "target": 22, "type": "control"},
    {"source": 22, "target": 23, "type": "control"},
    {"source": 23, "target": 24, "type": "control"},
    {"source": 24, "target": 25, "type": "control"},
    {"source": 25, "target": 26, "type": "control"},
    {"source": 26, "target": 27, "type": "control"},
    {"source": 27, "target": 28, "type": "control"},
    {"source": 28, "target": 29, "type": "control"},
    {"source": 29, "target": 30, "type": "control"},
    {"source": 30, "target": 31, "type": "control"},
    {"source": 31, "target": 32, "type": "control"},
    {"source": 32, "target": 33, "type": "control"},
    {"source": 33, "target": 34, "type": "control"},
    {"source": 34, "target": 35, "type": "control"},
    {"source": 35, "target": 36, "type": "control"},
    {"source": 36, "target": 37, "type": "control"},
    {"source": 37, "target": 38, "type": "control"},
    {"source": 38, "target": 39, "type": "control"},
    {"source": 39, "target": 40, "type": "control"},
    {"source": 40, "target": 41, "type": "control"},
    {"source": 41, "target": 42, "type": "control"},
    {"source": 42, "target": 43, "type": "control"},
    {"source": 43, "target": 44, "type": "control"},
    {"source": 44, "target": 45, "type": "control"},
    {"source": 45, "target": 46, "type": "control"},
    {"source": 46, "target": 47, "type": "control"},
    {"source": 47, "target": 48, "type": "control"},
    {"source": 48, "target": 49, "type": "control"},
    {"source": 49, "target": 50, "type": "control"},
    {"source": 50, "target": 51, "type": "control"},
    {"source": 51, "target": 52, "type": "control"},
    {"source": 52, "target": 53, "type": "control"},
    {"source": 53, "target": 54, "type": "control"},
    {"source": 54, "target": 55, "type": "control"},
    {"source": 55, "target": 56, "type": "control"},
    {"source": 56, "target": 57, "type": "control"},
    {"source": 57, "target": 58, "type": "control"},
    {"source": 58, "target": 59, "type": "control"},
    {"source": 59, "target": 60, "type": "control"},
    {"source": 60, "target": 61, "type": "control"},
    {"source": 61, "target": 62, "type": "control"},
    {"source": 62, "target": 63, "type": "control"},
    {"source": 63, "target": 64, "type": "control"},
    {"source": 64, "target": 65, "type": "control"},
    {"source": 65, "target": 66, "type": "control"},
    {"source": 66, "target": 67, "type": "control"},
    {"source": 67, "target": 68, "type": "control"},
    {"source": 68, "target": 69, "type": "control"},
    {"source": 69, "target": 70, "type": "control"},
    {"source": 70, "target": 71, "type": "control"},
    {"source": 71, "target": 72, "type": "control"},
    {"source": 72, "target": 73, "type": "control"},
    {"source": 73, "target": 74, "type": "control"},
    {"source": 74, "target": 75, "type": "control"},
    {"source": 75, "target": 76, "type": "control"},
    {"source": 76, "target": 77, "type": "control"},
    {"source": 77, "target": 78, "type": "control"},
    {"source": 78, "target": 79, "type": "control"}
  ],
  "dataflow_edges": [
    {"source": 20, "target": 21, "type": "dataflow", "var": "s"},
    {"source": 21, "target": 23, "type": "dataflow", "var": "SameLen"},
    {"source": 21, "target": 23, "type": "dataflow", "var": "s"},
    {"source": 21, "target": 23, "type": "dataflow", "var": "length"},
    {"source": 20, "target": 26, "type": "dataflow", "var": "String"},
    {"source": 23, "target": 26, "type": "dataflow", "var": "s"},
    {"source": 23, "target": 27, "type": "dataflow", "var": "SameLen"},
    {"source": 26, "target": 27, "type": "dataflow", "var": "s"},
    {"source": 26, "target": 27, "type": "dataflow", "var": "String"},
    {"source": 22, "target": 28, "type": "dataflow", "var": "error"},
    {"source": 22, "target": 28, "type": "dataflow", "var": "assignment"},
    {"source": 27, "target": 29, "type": "dataflow", "var": "SameLen"},
    {"source": 27, "target": 29, "type": "dataflow", "var": "s"},
    {"source": 27, "target": 29, "type": "dataflow", "var": "String"},
    {"source": 26, "target": 29, "type": "dataflow", "var": "r"},
    {"source": 29, "target": 32, "type": "dataflow", "var": "String"},
    {"source": 29, "target": 32, "type": "dataflow", "var": "s"},
    {"source": 29, "target": 32, "type": "dataflow", "var": "r"},
    {"source": 32, "target": 33, "type": "dataflow", "var": "s"},
    {"source": 23, "target": 33, "type": "dataflow", "var": "length"},
    {"source": 32, "target": 33, "type": "dataflow", "var": "r"},
    {"source": 29, "target": 34, "type": "dataflow", "var": "SameLen"},
    {"source": 33, "target": 34, "type": "dataflow", "var": "s"},
    {"source": 32, "target": 34, "type": "dataflow", "var": "String"},
    {"source": 29, "target": 34, "type": "dataflow", "var": "tN"},
    {"source": 33, "target": 34, "type": "dataflow", "var": "r"},
    {"source": 34, "target": 38, "type": "dataflow", "var": "String"},
    {"source": 34, "target": 38, "type": "dataflow", "var": "s"},
    {"source": 34, "target": 38, "type": "dataflow", "var": "r"},
    {"source": 38, "target": 39, "type": "dataflow", "var": "s"},
    {"source": 38, "target": 39, "type": "dataflow", "var": "r"},
    {"source": 34, "target": 40, "type": "dataflow", "var": "SameLen"},
    {"source": 39, "target": 40, "type": "dataflow", "var": "s"},
    {"source": 38, "target": 40, "type": "dataflow", "var": "String"},
    {"source": 34, "target": 40, "type": "dataflow", "var": "tN"},
    {"source": 39, "target": 40, "type": "dataflow", "var": "r"},
    {"source": 40, "target": 45, "type": "dataflow", "var": "String"},
    {"source": 40, "target": 45, "type": "dataflow", "var": "s"},
    {"source": 45, "target": 46, "type": "dataflow", "var": "String"},
    {"source": 27, "target": 46, "type": "dataflow", "var": "t"},
    {"source": 33, "target": 47, "type": "dataflow", "var": "length"},
    {"source": 47, "target": 48, "type": "dataflow", "var": "LTLengthOf"},
    {"source": 47, "target": 48, "type": "dataflow", "var": "value"},
    {"source": 48, "target": 50, "type": "dataflow", "var": "LTLengthOf"},
    {"source": 45, "target": 50, "type": "dataflow", "var": "s"},
    {"source": 47, "target": 50, "type": "dataflow", "var": "i"},
    {"source": 48, "target": 50, "type": "dataflow", "var": "j"},
    {"source": 28, "target": 51, "type": "dataflow", "var": "error"},
    {"source": 28, "target": 51, "type": "dataflow", "var": "assignment"},
    {"source": 50, "target": 52, "type": "dataflow", "var": "LTLengthOf"},
    {"source": 50, "target": 52, "type": "dataflow", "var": "s"},
    {"source": 50, "target": 52, "type": "dataflow", "var": "i"},
    {"source": 49, "target": 52, "type": "dataflow", "var": "k"},
    {"source": 46, "target": 55, "type": "dataflow", "var": "String"},
    {"source": 52, "target": 55, "type": "dataflow", "var": "s"},
    {"source": 55, "target": 56, "type": "dataflow", "var": "s"},
    {"source": 52, "target": 56, "type": "dataflow", "var": "i"},
    {"source": 47, "target": 56, "type": "dataflow", "var": "length"},
    {"source": 55, "target": 59, "type": "dataflow", "var": "MinLen"},
    {"source": 55, "target": 59, "type": "dataflow", "var": "String"},
    {"source": 56, "target": 59, "type": "dataflow", "var": "s"},
    {"source": 56, "target": 59, "type": "dataflow", "var": "IndexFor"},
    {"source": 56, "target": 59, "type": "dataflow", "var": "i"},
    {"source": 50, "target": 59, "type": "dataflow", "var": "j"},
    {"source": 59, "target": 60, "type": "dataflow", "var": "IndexFor"},
    {"source": 59, "target": 60, "type": "dataflow", "var": "s"},
    {"source": 50, "target": 60, "type": "dataflow", "var": "ij"},
    {"source": 59, "target": 60, "type": "dataflow", "var": "i"},
    {"source": 59, "target": 60, "type": "dataflow", "var": "j"},
    {"source": 59, "target": 63, "type": "dataflow", "var": "MinLen"},
    {"source": 59, "target": 63, "type": "dataflow", "var": "String"},
    {"source": 60, "target": 63, "type": "dataflow", "var": "s"},
    {"source": 40, "target": 63, "type": "dataflow", "var": "r"},
    {"source": 52, "target": 64, "type": "dataflow", "var": "LTLengthOf"},
    {"source": 63, "target": 64, "type": "dataflow", "var": "s"},
    {"source": 60, "target": 64, "type": "dataflow", "var": "i"},
    {"source": 56, "target": 64, "type": "dataflow", "var": "length"},
    {"source": 64, "target": 65, "type": "dataflow", "var": "LTLengthOf"},
    {"source": 64, "target": 65, "type": "dataflow", "var": "s"},
    {"source": 60, "target": 65, "type": "dataflow", "var": "j"},
    {"source": 63, "target": 65, "type": "dataflow", "var": "r"},
    {"source": 64, "target": 65, "type": "dataflow", "var": "length"},
    {"source": 63, "target": 68, "type": "dataflow", "var": "String"},
    {"source": 65, "target": 68, "type": "dataflow", "var": "s"},
    {"source": 64, "target": 68, "type": "dataflow", "var": "i"},
    {"source": 65, "target": 68, "type": "dataflow", "var": "j"},
    {"source": 68, "target": 69, "type": "dataflow", "var": "i"},
    {"source": 68, "target": 69, "type": "dataflow", "var": "s"},
    {"source": 65, "target": 69, "type": "dataflow", "var": "length"},
    {"source": 60, "target": 70, "type": "dataflow", "var": "IndexFor"},
    {"source": 69, "target": 70, "type": "dataflow", "var": "s"},
    {"source": 69, "target": 70, "type": "dataflow", "var": "i"},
    {"source": 51, "target": 71, "type": "dataflow", "var": "error"},
    {"source": 51, "target": 71, "type": "dataflow", "var": "assignment"},
    {"source": 70, "target": 72, "type": "dataflow", "var": "IndexFor"},
    {"source": 70, "target": 72, "type": "dataflow", "var": "s"},
    {"source": 68, "target": 72, "type": "dataflow", "var": "j"},
    {"source": 68, "target": 76, "type": "dataflow", "var": "String"},
    {"source": 72, "target": 76, "type": "dataflow", "var": "s"},
    {"source": 68, "target": 77, "type": "dataflow", "var": "IndexOrHigh"},
    {"source": 76, "target": 77, "type": "dataflow", "var": "s"},
    {"source": 70, "target": 77, "type": "dataflow", "var": "i"},
    {"source": 69, "target": 77, "type": "dataflow", "var": "length"},
    {"source": 65, "target": 78, "type": "dataflow", "var": "LTLengthOf"},
    {"source": 77, "target": 78, "type": "dataflow", "var": "s"},
    {"source": 72, "target": 78, "type": "dataflow", "var": "j"},
    {"source": 77, "target": 78, "type": "dataflow", "var": "length"}
  ]
}
