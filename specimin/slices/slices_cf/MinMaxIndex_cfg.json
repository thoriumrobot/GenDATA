{
  "method_name": "twoSequences",
  "nodes": [
    {"id": 22, "label": "  void indexForOrHigh(String str, @IndexFor(\"#1\") int i1, @IndexOrHigh(\"#1\") int i2) {", "line": 22, "node_type": "stmt"},
    {"id": 23, "label": "    str.substring(Math.max(i1, i2));", "line": 23, "node_type": "stmt"},
    {"id": 24, "label": "    str.substring(Math.min(i1, i2));", "line": 24, "node_type": "stmt"},
    {"id": 25, "label": "    // :: error: (argument)", "line": 25, "node_type": "stmt"},
    {"id": 26, "label": "    str.charAt(Math.max(i1, i2));", "line": 26, "node_type": "stmt"},
    {"id": 27, "label": "    str.charAt(Math.min(i1, i2));", "line": 27, "node_type": "stmt"},
    {"id": 28, "label": "  }", "line": 28, "node_type": "stmt"},
    {"id": 29, "label": "", "line": 29, "node_type": "stmt"},
    {"id": 30, "label": "  // max does not work with different sequences, min does", "line": 30, "node_type": "stmt"},
    {"id": 31, "label": "  void twoSequences(String str1, String str2, @IndexFor(\"#1\") int i1, @IndexFor(\"#2\") int i2) {", "line": 31, "node_type": "stmt"},
    {"id": 32, "label": "    // :: error: (argument)", "line": 32, "node_type": "stmt"},
    {"id": 33, "label": "    str1.charAt(Math.max(i1, i2));", "line": 33, "node_type": "stmt"},
    {"id": 34, "label": "    str1.charAt(Math.min(i1, i2));", "line": 34, "node_type": "stmt"},
    {"id": 35, "label": "  }", "line": 35, "node_type": "stmt"}
  ],
  "control_edges": [
    {"source": 22, "target": 23, "type": "control"},
    {"source": 23, "target": 24, "type": "control"},
    {"source": 24, "target": 25, "type": "control"},
    {"source": 25, "target": 26, "type": "control"},
    {"source": 26, "target": 27, "type": "control"},
    {"source": 27, "target": 28, "type": "control"},
    {"source": 28, "target": 29, "type": "control"},
    {"source": 29, "target": 30, "type": "control"},
    {"source": 30, "target": 31, "type": "control"},
    {"source": 31, "target": 32, "type": "control"},
    {"source": 32, "target": 33, "type": "control"},
    {"source": 33, "target": 34, "type": "control"},
    {"source": 34, "target": 35, "type": "control"}
  ],
  "dataflow_edges": [
    {"source": 22, "target": 23, "type": "dataflow", "var": "str"},
    {"source": 22, "target": 23, "type": "dataflow", "var": "i1"},
    {"source": 22, "target": 23, "type": "dataflow", "var": "i2"},
    {"source": 23, "target": 24, "type": "dataflow", "var": "str"},
    {"source": 23, "target": 24, "type": "dataflow", "var": "substring"},
    {"source": 23, "target": 24, "type": "dataflow", "var": "Math"},
    {"source": 23, "target": 24, "type": "dataflow", "var": "i1"},
    {"source": 23, "target": 24, "type": "dataflow", "var": "i2"},
    {"source": 24, "target": 26, "type": "dataflow", "var": "str"},
    {"source": 24, "target": 26, "type": "dataflow", "var": "Math"},
    {"source": 23, "target": 26, "type": "dataflow", "var": "max"},
    {"source": 24, "target": 26, "type": "dataflow", "var": "i1"},
    {"source": 24, "target": 26, "type": "dataflow", "var": "i2"},
    {"source": 26, "target": 27, "type": "dataflow", "var": "str"},
    {"source": 26, "target": 27, "type": "dataflow", "var": "charAt"},
    {"source": 26, "target": 27, "type": "dataflow", "var": "Math"},
    {"source": 24, "target": 27, "type": "dataflow", "var": "min"},
    {"source": 26, "target": 27, "type": "dataflow", "var": "i1"},
    {"source": 26, "target": 27, "type": "dataflow", "var": "i2"},
    {"source": 26, "target": 30, "type": "dataflow", "var": "max"},
    {"source": 27, "target": 30, "type": "dataflow", "var": "min"},
    {"source": 22, "target": 31, "type": "dataflow", "var": "String"},
    {"source": 22, "target": 31, "type": "dataflow", "var": "IndexFor"},
    {"source": 27, "target": 31, "type": "dataflow", "var": "i1"},
    {"source": 27, "target": 31, "type": "dataflow", "var": "i2"},
    {"source": 25, "target": 32, "type": "dataflow", "var": "error"},
    {"source": 25, "target": 32, "type": "dataflow", "var": "argument"},
    {"source": 31, "target": 33, "type": "dataflow", "var": "str1"},
    {"source": 27, "target": 33, "type": "dataflow", "var": "charAt"},
    {"source": 27, "target": 33, "type": "dataflow", "var": "Math"},
    {"source": 30, "target": 33, "type": "dataflow", "var": "max"},
    {"source": 31, "target": 33, "type": "dataflow", "var": "i1"},
    {"source": 31, "target": 33, "type": "dataflow", "var": "i2"},
    {"source": 33, "target": 34, "type": "dataflow", "var": "str1"},
    {"source": 33, "target": 34, "type": "dataflow", "var": "charAt"},
    {"source": 33, "target": 34, "type": "dataflow", "var": "Math"},
    {"source": 30, "target": 34, "type": "dataflow", "var": "min"},
    {"source": 33, "target": 34, "type": "dataflow", "var": "i1"},
    {"source": 33, "target": 34, "type": "dataflow", "var": "i2"}
  ]
}
